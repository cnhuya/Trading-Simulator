<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bybit.Net</name>
    </assembly>
    <members>
        <member name="T:Bybit.Net.BybitEnvironment">
            <summary>
            Bybit environments
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.RestBaseAddress">
            <summary>
            Spot Rest client address
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.SocketBaseAddress">
            <summary>
            Spot V1 Socket client address
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitEnvironment.#ctor">
            <summary>
            ctor for DI, use <see cref="M:Bybit.Net.BybitEnvironment.CreateCustom(System.String,System.String,System.String)"/> for creating a custom environment
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitEnvironment.GetEnvironmentByName(System.String)">
            <summary>
            Get the Bybit environment by name
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.Testnet">
            <summary>
            Testnet environment
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.Netherlands">
            <summary>
            Live environment for users from The Netherlands
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.HongKong">
            <summary>
            Live environment for users from HongKong
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.Turkey">
            <summary>
            Live environment for users from Turkey
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitEnvironment.DemoTrading">
            <summary>
            Demo trading environment, needs seperate API key. See https://bybit-exchange.github.io/docs/v5/demo
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="restAddress"></param>
            <param name="socketAddress"></param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.BybitExchange">
            <summary>
            Bybit exchange information and configuration
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.DisplayName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.ImageUrl">
            <summary>
            Url to exchange image
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitExchange.Type">
            <summary>
            Type of exchange
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to a Bybit recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:Bybit.Net.BybitExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the Bybit API
            </summary>
        </member>
        <member name="T:Bybit.Net.BybitRateLimiters">
            <summary>
            Rate limiter configuration for the Bybit API
            </summary>
        </member>
        <member name="E:Bybit.Net.BybitRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="P:Bybit.Net.BybitRateLimiters.Tier">
            <summary>
            The Tier to use when calculating rate limits
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitRateLimiters.Configure(Bybit.Net.Enums.AccountLevel)">
            <summary>
            Configure the rate limit with a different tier
            </summary>
            <param name="tier"></param>
        </member>
        <member name="T:Bybit.Net.BybitTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.BybitTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Bybit.Net.BybitTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Bybit.Net.BybitTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.BybitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.BybitRestClient">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.IBybitRestClient" />
        </member>
        <member name="P:Bybit.Net.Clients.BybitRestClient.V5Api">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.BybitRestClient.#ctor(System.Action{Bybit.Net.Objects.Options.BybitRestOptions})">
            <summary>
            Create a new instance of the BybitRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Bybit.Net.Objects.Options.BybitRestOptions})">
            <summary>
            Create a new instance of the BybitRestClient
            </summary>
            <param name="options">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.BybitRestClient.SetDefaultOptions(System.Action{Bybit.Net.Objects.Options.BybitRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.BybitSocketClient">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.IBybitSocketClient" />
        </member>
        <member name="P:Bybit.Net.Clients.BybitSocketClient.V5SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.BybitSocketClient.V5LinearApi">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.BybitSocketClient.V5InverseApi">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.BybitSocketClient.V5OptionsApi">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.BybitSocketClient.V5PrivateApi">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.BybitSocketClient.#ctor(System.Action{Bybit.Net.Objects.Options.BybitSocketOptions})">
            <summary>
            Create a new instance of the BybitSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitSocketClient.#ctor(Microsoft.Extensions.Options.IOptions{Bybit.Net.Objects.Options.BybitSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BybitSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="options">Option configuration</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.BybitSocketClient.SetDefaultOptions(System.Action{Bybit.Net.Objects.Options.BybitSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bybit.Net.Clients.BybitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi"/>
        </member>
        <member name="E:Bybit.Net.Clients.V5.BybitRestClientApi.OnOrderPlaced">
            <inheritdoc />
        </member>
        <member name="E:Bybit.Net.Clients.V5.BybitRestClientApi.OnOrderCanceled">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.ClientOptions">
            <summary>
            Options
            </summary>
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.SubAccount">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.CryptoLoan">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.Earn">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitRestClientApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.GetUrl(System.String)">
            <summary>
            Get url for an endpoint
            </summary>
            <param name="endpoint"></param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetLeverageAsync(Bybit.Net.Enums.Category,System.String,System.Decimal,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetCollateralAssetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetMultipleCollateralAssetsAsync(System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitSetCollateralAssetRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SwitchCrossIsolatedMarginAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.TradeMode,System.Decimal,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetTakeProfitStopLossModeAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.StopLossTakeProfitMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SwitchPositionModeAsync(Bybit.Net.Enums.Category,Bybit.Net.Enums.PositionMode,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.Int32,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetAutoAddMarginAsync(Bybit.Net.Enums.Category,System.String,System.Boolean,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetBalancesAsync(Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetBorrowHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetCollateralInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAssetGreeksAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetFeeRateAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetMarginAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetTransactionHistoryAsync(System.Nullable{Bybit.Net.Enums.AccountType},System.Nullable{Bybit.Net.Enums.Category},System.String,System.String,System.Nullable{Bybit.Net.Enums.TransactionLogType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetClassicContractTransactionHistoryAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransactionLogType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetMarginModeAsync(Bybit.Net.Enums.MarginMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAssetInfoAsync(Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAllAssetBalancesAsync(Bybit.Net.Enums.AccountType,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAssetBalanceAsync(Bybit.Net.Enums.AccountType,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetTransferableAssetsAsync(Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.CreateInternalTransferAsync(System.String,System.Decimal,Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetInternalTransfersAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransferStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.CreateUniversalTransferAsync(System.String,System.Decimal,System.String,System.String,Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetUniversalTransfersAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransferStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAllowedDepositAssetInfoAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetDepositAccountAsync(Bybit.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetDepositsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetInternalDepositsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAssetInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetWithdrawalsAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.WithdrawalType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetDelayedWithdrawQuantityAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.AccountType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.EditApiKeyAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.DeleteApiKeyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetAccountTypesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.AddOrReduceMarginAsync(Bybit.Net.Enums.Category,System.String,System.Decimal,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetSpotMarginLeverageAsync(System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetSpotMarginStatusAndLeverageAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetSpotMarginTradeModeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetSpotMarginDataAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetSpotMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetBrokerAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetBrokerEarningsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.SetSpotHedgingModeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.RepayLiabilitiesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.RequestDemoFundsAsync(System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetConvertAssetsAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.Nullable{Bybit.Net.Enums.ConvertAssetSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetConvertQuoteAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.ConvertConfirmQuoteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetConvertStatusAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetConvertHistoryAsync(System.Nullable{Bybit.Net.Enums.ConvertAccountType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetTransferableAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiAccount.GetTransferableAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiEarn">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiEarn.GetProductInfoAsync(Bybit.Net.Enums.EarnCategory,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiEarn.PlaceOrderAsync(Bybit.Net.Enums.EarnCategory,System.String,Bybit.Net.Enums.AccountType,System.String,Bybit.Net.Enums.EarnOrderType,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiEarn.GetOrderHistoryAsync(Bybit.Net.Enums.EarnCategory,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiEarn.GetStakedPositionsAsync(Bybit.Net.Enums.EarnCategory,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetCollateralAssetsAsync(System.Nullable{Bybit.Net.Enums.AccountLevel},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetBorrowableAssetsAsync(System.Nullable{Bybit.Net.Enums.AccountLevel},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetLimitsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.BorrowAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.LoanTerm},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.RepayAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetOpenLoansAsync(System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.LoanType},System.Nullable{Bybit.Net.Enums.LoanTerm},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetRepayHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetCompletedLoanOrdersAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetMaxCollateralAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.AdjustCollateralAsync(System.String,System.Decimal,Bybit.Net.Enums.AdjustDirection,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiCryptoLoan.GetCollateralAdjustHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetAnnouncementsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetMarkPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetIndexPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetPremiumIndexPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetSpotSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetOptionSymbolsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetLinearInverseSymbolsAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{Bybit.Net.Enums.SymbolStatus},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetOrderbookAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetSpotTickersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetOptionTickersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetLinearInverseTickersAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetFundingRateHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetTradeHistoryAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{Bybit.Net.Enums.OptionType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetOpenInterestAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OpenInterestInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetHistoricalVolatilityAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetInsuranceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetDeliveryPriceAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetLeverageTokensAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetLeverageTokenMarketAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetLongShortRatioAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.DataPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiExchangeData.GetSpotMarginTieredCollateralRatioAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.CreateSubAccountAsync(System.String,Bybit.Net.Enums.SubAccountType,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.CreateSubAccountApiKeyAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.GetSubAccountsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.FreezeSubAccountAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.EditSubAccountApiKeyAsync(System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiSubAccounts.DeleteSubAccountApiKeyAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitRestClientApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.PlaceOrderAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OrderSide,Bybit.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.TriggerDirection},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TimeInForce},System.Nullable{Bybit.Net.Enums.PositionIdx},System.String,System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{Bybit.Net.Enums.SelfMatchPreventionType},System.Nullable{Bybit.Net.Enums.MarketUnit},System.Nullable{Bybit.Net.Enums.SlippageToleranceType},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.PlaceMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.EditOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.EditMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitEditOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.CancelOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.CancelMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetOrdersAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.CancelAllOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{Bybit.Net.Enums.StopOrderType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetOrderHistoryAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderStatus},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetBorrowQuotaAsync(System.String,Bybit.Net.Enums.OrderSide,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.SetDisconnectCancelAllAsync(System.Int32,System.Nullable{Bybit.Net.Enums.ProductType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetDisconnectCancelAllConfigAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetUserTradesAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bybit.Net.Enums.TradeType},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetPositionsAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.ConfirmRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetAssetExchangeHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetDeliveryHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetSettlementHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetClosedProfitLossAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.SetTradingStopAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.PositionIdx,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{Bybit.Net.Enums.OrderType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.PurchaseLeverageTokenAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.RedeemLeverageTokenAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitRestClientApiTrading.GetLeverageTokenOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{Bybit.Net.Enums.LeverageTokenRecordType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientBaseApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi" />
        </member>
        <member name="P:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="F:Bybit.Net.Clients.V5.BybitSocketClientBaseApi._baseEndpoint">
            <summary>
            Base endpoint
            </summary>
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToOrderbookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToOrderbookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToAllLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientBaseApi.SubscribeToAllLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientInverseApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi" />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientInverseApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientLinearApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi" />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientLinearApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientOptionApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi" />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOptionTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOptionTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToOrderbookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToOrderbookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientOptionApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi" />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPositionUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitUserTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToMinimalUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToWalletUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitBalance}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToGreekUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitGreeks}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.SubscribeToDisconnectCancelAllTopicAsync(Bybit.Net.Enums.ProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.PlaceOrderAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OrderSide,Bybit.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.TriggerDirection},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TimeInForce},System.Nullable{Bybit.Net.Enums.PositionIdx},System.String,System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{Bybit.Net.Enums.SelfMatchPreventionType},System.Nullable{Bybit.Net.Enums.MarketUnit},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.EditOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.CancelOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.PlaceMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.EditMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitEditOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientPrivateApi.CancelMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.BybitSocketClientSpotApi">
            <inheritdoc cref="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi" />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenNavUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToLeveragedTokenNavUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.Clients.V5.BybitSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts">
            <summary>
            Bybit sub account endpoints
            </summary>
        </member>
        <member name="M:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts.CreateSubAccountAsync(System.String,Bybit.Net.Enums.SubAccountType,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new sub account
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/create-subuid" /></para>
            </summary>
            <param name="username">Username</param>
            <param name="type">Account type</param>
            <param name="password">Password, 8-30 characters, must include numbers, upper and lowercase letters</param>
            <param name="enableQuickLogin">Enable quick login</param>
            <param name="isUta">Uta account</param>
            <param name="note">Set a remark</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts.CreateSubAccountApiKeyAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new API key for a sub account
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/create-subuid-apikey" /></para>
            </summary>
            <param name="subAccountId">Subaccount id</param>
            <param name="readOnly">Readonly key</param>
            <param name="permissionContractTradeOrder">Has contract order permission</param>
            <param name="permissionContractTradePosition">Has contract position permission</param>
            <param name="permissionSpotTrade">Has spot trade permission</param>
            <param name="permissionWalletTransfer">Has wallet transfer permission</param>
            <param name="permissionWalletSubAccountTransfer">Has permission wallet subaccount transfer permission</param>
            <param name="permissionOptionsTrade">Has option trade permission</param>
            <param name="permissionExchangeHistory">Has exchange history permission</param>
            <param name="permissionCopyTrading">Has copy trade permission</param>
            <param name="ipRestrictions">Ip restrictions, comma seperated</param>
            <param name="note">Note</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts.GetSubAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Get list of subaccounts
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/subuid-list" /></para>
            </summary>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts.EditSubAccountApiKeyAsync(System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Edit API key. Note that permissions starting with the same topic (for example `permissionContractTradeOrder` and `permissionContractTradePosition` or `permissionWalletTransfer` and `permissionWalletSubAccountTransfer`) can not be adjusted separately and should both be set when changing one of the values.
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/modify-sub-apikey" /></para>
            </summary>
            <param name="apiKey">Api key, should be passed if editing from Master account, should be null if editing own API key from sub account</param>
            <param name="readOnly">Readonly</param>
            <param name="ipRestrictions">IP restrictions, comma seperated</param>
            <param name="permissionContractTradeOrder">Has contract order permission</param>
            <param name="permissionContractTradePosition">Has contract position permission</param>
            <param name="permissionSpotTrade">Has spot trade permission</param>
            <param name="permissionWalletTransfer">Has wallet transfer permission</param>
            <param name="permissionWalletSubAccountTransfer">Has permission wallet subaccount transfer permission</param>
            <param name="permissionOptionsTrade">Has option trade permission</param>
            <param name="permissionExchangeHistory">Has exchange history permission</param>
            <param name="permissionCopyTrading">Has copy trade permission</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Clients.V5.IBybitRestClientApiSubAccounts.DeleteSubAccountApiKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an API key
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/rm-sub-apikey" /></para>
            </summary>
            <param name="apiKey">Api key, should be passed if deleting from Master account, should be null if editing own API key from sub account</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Enums.AccountLevel">
            <summary>
            Tier of account
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.AccountMode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountMode.Classic">
            <summary>
            Classic
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountMode.UniversalMarginAccount">
            <summary>
            UMA
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountMode.UniversalTransferAccount">
            <summary>
            UTA
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Contract">
            <summary>
            Contract account (futures)
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Investment">
            <summary>
            Investment (defi) account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.CopyTrading">
            <summary>
            Copy trading account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Option">
            <summary>
            Option account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Fund">
            <summary>
            Funding account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AccountType.Unified">
            <summary>
            Unified account
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.AdjustDirection">
            <summary>
            Adjust direction
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AdjustDirection.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AdjustDirection.Reduce">
            <summary>
            Reduce
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.AuctionPhase">
            <summary>
            Auction phase
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.NotStarted">
            <summary>
            Not started
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.Finished">
            <summary>
            Pre-market trading is finished
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.CallAuction">
            <summary>
            Auction phase of pre-market trading<br/>
            - only timeInForce=GTC, orderType=Limit order is allowed to submit<br/>
            - TP/SL are not supported; Conditional orders are not supported<br/>
            - cannot modify the order at this stage<br/>
            - order price range: [preOpenPrice x 0.5, maxPrice]
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.CallAuctionNoCancel">
            <summary>
            Auction no cancel phase of pre-market trading<br/>
            only timeInForce=GTC, orderType=Limit order is allowed to submit<br/>
            TP/SL are not supported; Conditional orders are not supported<br/>
            cannot modify and cancel the order at this stage<br/>
            order price range: Buy [lastPrice x 0.5, markPrice x 1.1], Sell [markPrice x 0.9, maxPrice]
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.CrossMatching">
            <summary>
            cross matching phase<br/>
            cannot create, modify and cancel the order at this stage<br/>
            Candle data is released from this stage
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.AuctionPhase.ContinuousTrading">
            <summary>
            Continuous trading phase<br/>
            There is no restriction to create, amend, cancel orders<br/>
            orderbook, public trade data is released from this stage
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.CancelType">
            <summary>
            Cancel type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByUser">
            <summary>
            Cancel by user
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByReduceOnly">
            <summary>
            Cancel by reduce only
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelyByPrepareLiq">
            <summary>
            Cancel due to liquidation
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelAllBeforeLiq">
            <summary>
            Cancel due to liquidation
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByPrepareAdl">
            <summary>
            Cancel due to ADL
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelAllBeforeAdl">
            <summary>
            Cancel due to ADL
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByAdmin">
            <summary>
            Cancel by admin
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByTpSlTsClear">
            <summary>
            Cancel by TP/SL ts clear
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByPzSideCh">
            <summary>
            Cancel by Pz Side Ch
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelBySettle">
            <summary>
            Cancel by setlle
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByCannotAffordOrderCost">
            <summary>
            Cancel by cannot afford
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByPmTrialMmOverEquity">
            <summary>
            Cancel by Pm Trial Mm over equity
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByAccountBlocking">
            <summary>
            Cancel by account blocking
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByDelivery">
            <summary>
            Cancel by delivery
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByMmpTriggered">
            <summary>
            Cancel by market maker protection triggered
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByCrossSelfMuch">
            <summary>
            Cancel by cross self much
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByCrossReachMaxTradeNum">
            <summary>
            Cancel by reached max trade number
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelByDCP">
            <summary>
            Cancel by DCP
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.CancelBySmp">
            <summary>
            Cancel by Self match prevention
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CancelType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.Category">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.Category.Linear">
            <summary>
            Linear perpetual, including USDC perp.
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.Category.Inverse">
            <summary>
            Inverse futures, including inverse perpetual, inverse futures.
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.Category.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.Category.Option">
            <summary>
            USDC Option
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.Category.Undefined">
            <summary>
            Category not passed
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.ContractTypeV5">
            <summary>
            V5 contract types
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ContractTypeV5.InversePerpetual">
            <summary>
            Inverse perpetual
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ContractTypeV5.LinearPerpetual">
            <summary>
            Linear perpetual
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ContractTypeV5.LinearFutures">
            <summary>
            Linear futures
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ContractTypeV5.InverseFutures">
            <summary>
            Inverse futures
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.ConvertAccountType">
            <summary>
            Convert account type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAccountType.ConvertFunding">
            <summary>
            Funding account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAccountType.ConvertUta">
            <summary>
            UTA account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAccountType.ConvertSpot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAccountType.ConvertContract">
            <summary>
            Contract account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAccountType.ConvertInverse">
            <summary>
            Inverse account
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.ConvertAssetSide">
            <summary>
            Asset side
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAssetSide.FromAssetList">
            <summary>
            From asset list, the balance is given if you have it
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertAssetSide.ToAssetList">
            <summary>
            To asset list, asset to buy
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.ConvertTransactionStatus">
            <summary>
            Convert status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertTransactionStatus.Initial">
            <summary>
            Initial
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertTransactionStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertTransactionStatus.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ConvertTransactionStatus.Failed">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.CopyTradeType">
            <summary>
            Copy trading type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CopyTradeType.None">
            <summary>
            Regardless of normal account or UTA account, this trading pair does not support copy trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CopyTradeType.Both">
            <summary>
            For both normal account and UTA account, this trading pair supports copy trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CopyTradeType.UtaOnly">
            <summary>
            Only for UTA account,this trading pair supports copy trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.CopyTradeType.NormalOnly">
            <summary>
            Only for normal account, this trading pair supports copy trading
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.DataPeriod">
            <summary>
            Period
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.FiveMinutes">
            <summary>
            5min
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.FifteenMinutes">
            <summary>
            15min
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.ThirtyMinutes">
            <summary>
            30min
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.FourHours">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DataPeriod.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.DepositStatus">
            <summary>
            Deposit status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DepositStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DepositStatus.ToBeConfirmed">
            <summary>
            Awaiting confirmations
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DepositStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.DepositStatus.DepositFailed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.EarnCategory">
            <summary>
            Earn category
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnCategory.FlexibleSaving">
            <summary>
            Flexible saving
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.EarnOrderStatus">
            <summary>
            Earn order status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnOrderStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnOrderStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnOrderStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.EarnOrderType">
            <summary>
            Earn order type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnOrderType.Stake">
            <summary>
            Stake
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnOrderType.Redeem">
            <summary>
            Redeem
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.EarnProductStatus">
            <summary>
            Product status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnProductStatus.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.EarnProductStatus.NotAvailable">
            <summary>
            Not available
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.InternalDepositStatus">
            <summary>
            Internal deposit status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.InternalDepositStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.InternalDepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.InternalDepositStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.KlineInterval">
            <summary>
            Kline interval, int value represents the time in seconds
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.ThreeMinutes">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.OneHour">
            <summary>
            60
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.TwoHours">
            <summary>
            120
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.FourHours">
            <summary>
            240
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.SixHours">
            <summary>
            360
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.TwelveHours">
            <summary>
            720
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.OneDay">
            <summary>
            D
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.OneWeek">
            <summary>
            W
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KlineInterval.OneMonth">
            <summary>
            M
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.KycLevel">
            <summary>
            KnowYourCustomer level
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KycLevel.Default">
            <summary>
            Default level
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KycLevel.Level1">
            <summary>
            Level 1
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.KycLevel.Level2">
            <summary>
            Level 2
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LeverageTokenOrderStatus">
            <summary>
            Leverage token purchase status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenOrderStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenOrderStatus.InProgress">
            <summary>
            In progress
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenOrderStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LeverageTokenRecordType">
            <summary>
            Leverage token record type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenRecordType.Purchase">
            <summary>
            Purchase record
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenRecordType.Redeem">
            <summary>
            Redeem record
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LeverageTokenStatus">
            <summary>
            Leverage token status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenStatus.YesPurchaseYesRedeem">
            <summary>
            Purchaseable and redeemable
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenStatus.YesPurchaseNoRedeem">
            <summary>
            Purchasable but not redeemable
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenStatus.NoPurchaseYesRedeem">
            <summary>
            Not purchasable but is redeemable
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenStatus.NoPurchaseNoRedeem">
            <summary>
            Not purchasable or redeemable
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LeverageTokenStatus.AdjustingPosition">
            <summary>
            Adjusting position
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LoanStatus">
            <summary>
            Loan status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanStatus.FullyRepaidManually">
            <summary>
            Fully repaid manually
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanStatus.FullyRepaidByLiquidation">
            <summary>
            Fully repaid by liquidation
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LoanTerm">
            <summary>
            Loan term
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanTerm.Days7">
            <summary>
            7 days
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanTerm.Days14">
            <summary>
            14 days
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanTerm.Days30">
            <summary>
            30 days
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanTerm.Days90">
            <summary>
            90 days
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanTerm.Days180">
            <summary>
            180 days
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.LoanType">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanType.FixedTerm">
            <summary>
            Fixed term
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.LoanType.FlexibleTerm">
            <summary>
            Flexible term
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginMode.RegularMargin">
            <summary>
            Regular margin
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginMode.PortfolioMargin">
            <summary>
            Portfolio margin
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginMode.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.MarginTrading">
            <summary>
            Margin trading status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginTrading.None">
            <summary>
            No margin trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginTrading.Both">
            <summary>
            Both normal and UTA account supports margin trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginTrading.UtaOnly">
            <summary>
            Only UTA account supports margin trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarginTrading.NormalSpotOnly">
            <summary>
            Only normal account support margin trading
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.MarketUnit">
            <summary>
            The unit for quantity when creating Spot market orders for UTA account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarketUnit.BaseAsset">
            <summary>
            For example, when buying on BTCUSDT, then "quantity" unit is BTC
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.MarketUnit.QuoteAsset">
            <summary>
            For example, when selling on BTCUSDT, then "quantity" unit is USDT
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.NewOrderType">
            <summary>
            Order type for new orders
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.NewOrderType.Limit">
            <summary>
            Limit order. An order for a set (or better) price
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.NewOrderType.Market">
            <summary>
            Market order. An order for the best price available upon placing
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OcoTriggerType">
            <summary>
            Oco trigger type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OcoTriggerType.OcoTriggerByUnknown">
            <summary>
            Trigger by unknown
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OcoTriggerType.OcoTriggerTp">
            <summary>
            Trigger by take profit
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OcoTriggerType.OcoTriggerBySl">
            <summary>
            Trigger by stop loss
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OpenInterestInterval">
            <summary>
            Open interest interval, int value represents the time in seconds
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.FiveMinutes">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.FifteenMinutes">
            <summary>
            15
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.ThirtyMinutes">
            <summary>
            30
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.OneHour">
            <summary>
            60
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.FourHours">
            <summary>
            240
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OpenInterestInterval.OneDay">
            <summary>
            D
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OptionType">
            <summary>
            Trading type of option
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OptionType.Call">
            <summary>
            Call
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OptionType.Put">
            <summary>
            Put
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OrderFilter">
            <summary>
            Order filter
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderFilter.Order">
            <summary>
            Active order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderFilter.StopOrder">
            <summary>
            Conditional order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderFilter.TpSlOrder">
            <summary>
            Spot TakeProfit/StopLoss order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderFilter.OcoOrder">
            <summary>
            Oco order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderFilter.BidirectionalTpslOrder">
            <summary>
            Bidirectional TakeProfit/StopLoss order
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OrderSide">
            <summary>
            Side of an order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Created">
            <summary>
            Created but not yet in matching engine
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.New">
            <summary>
            Placed successfully
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.PartiallyFilledCanceled">
            <summary>
            Partially filled and cancelled
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Untriggered">
            <summary>
            Untriggered
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Deactivated">
            <summary>
            Deactivated
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderStatus.Active">
            <summary>
            Order has been triggered and the new active order has been successfully placed. Is the final state of a successful conditional order
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderType.Limit">
            <summary>
            Limit order. An order for a set (or better) price
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderType.Market">
            <summary>
            Market order. An order for the best price available upon placing
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.OrderType.LimitMaker">
            <summary>
            Limit maker order, only available for SPOT
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.PositionIdx">
            <summary>
            Position idx
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionIdx.OneWayMode">
            <summary>
            One way mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionIdx.BuyHedgeMode">
            <summary>
            Buy side of hedge mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionIdx.SellHedgeMode">
            <summary>
            Sell side of hedge mode
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionMode.MergedSingle">
            <summary>
            Merge single
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionMode.BothSides">
            <summary>
            Both sides
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.PositionSide">
            <summary>
            Side of a position
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionSide.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.PositionStatus">
            <summary>
            Position status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionStatus.Liqidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.PositionStatus.AutoDeleverage">
            <summary>
            Auto deleverage
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.ProductType">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ProductType.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ProductType.Derivatives">
            <summary>
            Derivatives
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.ProductType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.RepayStatus">
            <summary>
            Repayment status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.RepayStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.RepayStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.RepayType">
            <summary>
            Repayment type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.RepayType.ByUser">
            <summary>
            By user
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.RepayType.ByLiquidation">
            <summary>
            By liquidation
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.SelfMatchPreventionType">
            <summary>
            Self match prevention type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SelfMatchPreventionType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SelfMatchPreventionType.CancelMaker">
            <summary>
            Cancel maker
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SelfMatchPreventionType.CancelTaker">
            <summary>
            Cancel taker
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SelfMatchPreventionType.CancelBoth">
            <summary>
            Cancel both
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.SlippageToleranceType">
            <summary>
            Tolerance type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SlippageToleranceType.TickSize">
            <summary>
            Tick size, the best price at the moment + (slippageTolerance * tickSize)
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SlippageToleranceType.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SlippageToleranceType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.StopLossTakeProfitMode">
            <summary>
            StopLoss/TakeProfit mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopLossTakeProfitMode.Full">
            <summary>
            Full take profit/stop loss mode (a single TP order and a single SL order can be placed, covering the entire position)
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopLossTakeProfitMode.Partial">
            <summary>
            Partial take profit/stop loss mode (multiple TP and SL orders can be placed, covering portions of the position)
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopLossTakeProfitMode.Unknown">
            <summary>
            Unknown, when placed on the website
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.StopOrderType">
            <summary>
            Stop order type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.TakeProfit">
            <summary>
            Take profit
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.StopLoss">
            <summary>
            Stop loss
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.TrailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.TrailingProfit">
            <summary>
            Trailing profit
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.Stop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.PartialStopLoss">
            <summary>
            Partial stop loss
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.PartialTakeProfit">
            <summary>
            Partial stop loss
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.TpSlOrder">
            <summary>
            Spot TP/SL order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.OcoOrder">
            <summary>
            Oco Order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.MmRateClose">
            <summary>
            MmRateClose (only from web)
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.BidirectionalTpslOrder">
            <summary>
            Spot bidirectional tpsl order
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.StopOrderType.Unknown">
            <summary>
            Unknown type
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.SubAccountStatus">
            <summary>
            Account status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SubAccountStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SubAccountStatus.LoginBanned">
            <summary>
            Login banned
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SubAccountStatus.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.SubAccountType">
            <summary>
            Sub account type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SubAccountType.NormalAccount">
            <summary>
            Normal account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SubAccountType.CustodialAccount">
            <summary>
            Custodial account
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.SymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SymbolStatus.PreLaunch">
            <summary>
            Pre launch
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SymbolStatus.Trading">
            <summary>
            Currently trading
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SymbolStatus.Settling">
            <summary>
            Settling
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SymbolStatus.Delivering">
            <summary>
            Settling
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.SymbolStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TickDirection">
            <summary>
            Tick direction
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TickDirection.PlusTick">
            <summary>
            Price rise tick
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TickDirection.ZeroPlusTick">
            <summary>
            Trade occurs at the same price as the previous trade, which occurred at a price higher than that for the trade preceding it
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TickDirection.MinusTick">
            <summary>
            Price drop tick
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TickDirection.ZeroMinusTick">
            <summary>
            Trade occurs at the same price as the previous trade, which occurred at a price lower than that for the trade preceding it
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TimeInForce.GoodTillCanceled">
            <summary>
            Good till canceled by user
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            Fill at least partially upon placing or cancel
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            Fill fully upon placing or cancel
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TimeInForce.PostOnly">
            <summary>
            Only place order if the order is added to the order book instead of being filled immediately
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TimeInForce.RetailPriceImprovement">
            <summary>
            Retail Price Improvement orders act as PostOnly orders but also do cannot match with algorithmic (API) orders. See https://www.bybit.nl/nl-NL/help-center/article/Retail-Price-Improvement-RPI-Order
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TradeMode">
            <summary>
            Trigger direction
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeMode.CrossMargin">
            <summary>
            Cross margin mode
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeMode.Isolated">
            <summary>
            Isolated mode
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.Trade">
            <summary>
            Normal trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.AdlTrade">
            <summary>
            Adl trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.Funding">
            <summary>
            Funding trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.BustTrade">
            <summary>
            Bankruptcy trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.Settle">
            <summary>
            Settle
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.BlockTrade">
            <summary>
            Block trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TradeType.MovePosition">
            <summary>
            Move position
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TransactionLogType">
            <summary>
            Transaction log type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TransferIn">
            <summary>
            Transfer in
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TransferOut">
            <summary>
            Transfer out
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Settlement">
            <summary>
            Settlement
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Adl">
            <summary>
            Auto deleveraging
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Airdrop">
            <summary>
            Airdrop
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Bonus">
            <summary>
            Bonus
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.BonusRecollect">
            <summary>
            Bonus expired
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.FeeRefund">
            <summary>
            Fee refund
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CurrencyBuy">
            <summary>
            Currency buy
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CurrencySell">
            <summary>
            Currency sell
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.BorrowedAmountInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PrincipleRepaymentInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.InterestRepaymentInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.AutoSoldCollateralInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.AutoBuyLiabilityInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.AutoPrincipleRepaymentInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.AutoInterestRepaymentInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TransferInInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TransferOutInsLoan">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.SpotRepaymentSell">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.SpotRepaymentBuy">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TokensSubscription">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.TokensRedemption">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.AutoDeduction">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.FlexibleStakingSubscription">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.FlexibleStakingRedemption">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.FixedStakingSubscription">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketTransferOut">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketDeliverySellNewAsset">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketDeliveryBuyNewAsset">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketDeliveryPledgePaySeller">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketDeliveryPledgeBack">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketRollbackPledgeBack">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.PreMarketRollbackPledgePenaltyToBuyer">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CustodyNetworkFee">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CustodySettleFee">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CustodyLock">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CustodyUnlock">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.CustodyUnlockRefund">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.LoansBorrowFunds">
            <summary>
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransactionLogType.LoansAssetRedemption">
            <summary>
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TransferStatus">
            <summary>
            Transfer status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransferStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransferStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransferStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TransferStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TriggerDirection">
            <summary>
            Trigger direction
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerDirection.Rise">
            <summary>
            Market price rises to triggerPrice
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerDirection.Fall">
            <summary>
            Market price falls to triggerPrice
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.TriggerType">
            <summary>
            Type of trigger
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerType.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerType.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.TriggerType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.UnifiedMarginStatus">
            <summary>
            Unified margin status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.Regular">
            <summary>
            Regular account
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.UnifiedMarginAccount">
            <summary>
            Unified margin account, can only trade linear perpetual and options.
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.UnifiedTradeAccount">
            <summary>
            Unified trade account, can trade linear perpetual, options and spot
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.UnifiedTradeAccountPro">
            <summary>
            Unified trade account pro, can trade bulk order api endpoints
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.UnifiedTradeAccount2">
            <summary>
            Unified trade account 2.0 pro, can trade bulk order api endpoints
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.UnifiedMarginStatus.UnifiedTradeAccount2Pro">
            <summary>
            Unified trade account 2.0 pro, can trade bulk order api endpoints
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.WithdrawalStatus">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.SecurityCheck">
            <summary>
            Security check
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.CanceledByUser">
            <summary>
            Canceled by user
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.BlockchainConfirmed">
            <summary>
            Blockchain confirmed
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalStatus.MoreInformationRequired">
            <summary>
            More information required
            </summary>
        </member>
        <member name="T:Bybit.Net.Enums.WithdrawalType">
            <summary>
            Withdrawal type
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalType.OnChain">
            <summary>
            On chain
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalType.OffChain">
            <summary>
            Off chain
            </summary>
        </member>
        <member name="F:Bybit.Net.Enums.WithdrawalType.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.IBybitRestClient">
            <summary>
            Client for accessing the Bybit Rest API. 
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitRestClient.V5Api">
            <summary>
            V5 API endpoints
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.IBybitRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.IBybitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.IBybitSocketClient">
            <summary>
            Client for accessing the bybit websocket API
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitSocketClient.V5SpotApi">
            <summary>
            V5 Spot streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitSocketClient.V5LinearApi">
            <summary>
            V5 Linear streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitSocketClient.V5InverseApi">
            <summary>
            V5 Inverse contract streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitSocketClient.V5OptionsApi">
            <summary>
            V5 Option streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.IBybitSocketClient.V5PrivateApi">
            <summary>
            V5 Private streams
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.IBybitSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.IBybitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.BybitRepayId">
            <summary>
            Repay id
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.BybitRepayId.RepayId">
            <summary>
            Repay id
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi">
            <summary>
            Bybit V5 API endpoints
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.SubAccount">
            <summary>
            Endpoint for managing sub accounts
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.CryptoLoan">
            <summary>
            Endpoint for crypto loans
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.Earn">
            <summary>
            Endpoints for Bybit Earn
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.CommonSpotClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://jkorf.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount">
            <summary>
            Bybit account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and changing account settings
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a withdrawal
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/cancel-withdraw" /></para>
            </summary>
            <param name="id">The id of the withdrawal to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.CreateInternalTransferAsync(System.String,System.Decimal,Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an internal transfer between different account types
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/create-inter-transfer" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="fromAccountType">From account type</param>
            <param name="toAccountType">To account type</param>
            <param name="transferId">Client id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.CreateUniversalTransferAsync(System.String,System.Decimal,System.String,System.String,Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between main/sub accounts
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/unitransfer" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="fromMemberId">From member id</param>
            <param name="toMemberId">To member id</param>
            <param name="fromAccountType">From account type</param>
            <param name="toAccountType">To account type</param>
            <param name="transferId">Client id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetMarginAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get margin configuration info
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/account-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAllAssetBalancesAsync(Bybit.Net.Enums.AccountType,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get all balances
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/all-balance" /></para>
            </summary>
            <param name="accountType">Account type</param>
            <param name="memberId">Member id</param>
            <param name="asset">Asset, for example `ETH`. Can be specify multiple comma separated assets. Required for Unified account.</param>
            <param name="withBonus">Include bonus</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAllowedDepositAssetInfoAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get allowed deposit asset info
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/deposit-coin-spec" /></para>
            </summary>
            <param name="asset">Filter on asset, for example `ETH`</param>
            <param name="network">Filter on network</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get api key info for the current api key
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/apikey-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.EditApiKeyAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Edit master API key settings
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/modify-master-apikey" /></para>
            </summary>
            <param name="readOnly">Readonly</param>
            <param name="ipRestrictions">IP restrictions, comma seperated</param>
            <param name="permissionContractTradeOrder">Has contract order permission</param>
            <param name="permissionContractTradePosition">Has contract position permission</param>
            <param name="permissionSpotTrade">Has spot trade permission</param>
            <param name="permissionWalletTransfer">Has wallet transfer permission</param>
            <param name="permissionWalletSubAccountTransfer">Has permission wallet subaccount transfer permission</param>
            <param name="permissionOptionsTrade">Has option trade permission</param>
            <param name="permissionExchangeHistory">Has exchange history permission</param>
            <param name="permissionCopyTrading">Has copy trade permission</param>
            <param name="permissionBlockTrading">Has block trade permission</param>
            <param name="permissionNftProductList">Has NFT product list permission</param>
            <param name="permissionAffiliate">Has affiliate permission</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.DeleteApiKeyAsync(System.Threading.CancellationToken)">
            <summary>
            Delete the current API Key
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/rm-master-apikey" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAccountTypesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get account types
            <para><a href="https://bybit-exchange.github.io/docs/v5/user/wallet-type" /></para>
            </summary>
            <param name="subAccountIds">Master id can request subaccount info</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAssetBalanceAsync(Bybit.Net.Enums.AccountType,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get asset balance
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/account-coin-balance" /></para>
            </summary>
            <param name="accountType">Account type</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="memberId">Member id</param>
            <param name="withBonus">Include bonus</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAssetGreeksAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get current account greek info
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/coin-greeks" /></para>
            </summary>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAssetInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get coin info including chain info and withdrawal and deposit status
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/coin-info" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetAssetInfoAsync(Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get asset information
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/asset-info" /></para>
            </summary>
            <param name="accountType">Account type (spot only atm)</param>
            <param name="asset">Filter asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetBalancesAsync(Bybit.Net.Enums.AccountType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get wallet balance and account info
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/wallet-balance" /></para>
            </summary>
            <param name="accountType">Account info</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetBorrowHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get borrow history
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/borrow-history" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetCollateralInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the collateral information of the current unified margin account, including loan interest rate, loanable amount, collateral conversion rate, whether it can be mortgaged as margin, etc.
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/collateral-info" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetDelayedWithdrawQuantityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get delayed withdrawal amount
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/delay-amount" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the master deposit address for an asset
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/deposit/master-deposit-addr" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="networkType">Network type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetDepositsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of deposits
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/deposit/deposit-record" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetInternalDepositsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of internal deposits
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/deposit/internal-deposit-record" /></para>
            </summary>
            <param name="transactionId">Filter by transaction id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="cursor">Next page cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetFeeRateAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get fee rates
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/fee-rate" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetInternalTransfersAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransferStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get internal transfer history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/inter-transfer-list" /></para>
            </summary>
            <param name="transferId">Filter by tansfer id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="transferStatus">Filter by status</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetTransactionHistoryAsync(System.Nullable{Bybit.Net.Enums.AccountType},System.Nullable{Bybit.Net.Enums.Category},System.String,System.String,System.Nullable{Bybit.Net.Enums.TransactionLogType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get transaction logs in Unified account.
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/transaction-log" /></para>
            </summary>
            <param name="accountType">Filter by account type</param>
            <param name="category">Filter by category</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="baseAsset">Filter by base asset</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetClassicContractTransactionHistoryAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransactionLogType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get classic account, contract transaction logs
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/contract-transaction-log" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="baseAsset">Filter by base asset</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetTransferableAssetsAsync(Bybit.Net.Enums.AccountType,Bybit.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <summary>
            Get a list of transferable assets between accounts
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/transferable-coin" /></para>
            </summary>
            <param name="fromAccountType">From account type</param>
            <param name="toAccountType">To account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetUniversalTransfersAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.TransferStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get universal transfer history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/unitransfer-list" /></para>
            </summary>
            <param name="transferId">Filter by tansfer id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="transferStatus">Filter by status</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetWithdrawalsAsync(System.String,System.String,System.Nullable{Bybit.Net.Enums.WithdrawalType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get withdrawal history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/withdraw/withdraw-record" /></para>
            </summary>
            <param name="withdrawId">Filter by withdrawal id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="transactionId">Transaction hash ID</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetAutoAddMarginAsync(Bybit.Net.Enums.Category,System.String,System.Boolean,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <summary>
            Set auto add margin
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/add-margin" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="autoAddMargin">Auto add margin or not</param>
            <param name="positionIdx">Position idx</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetDepositAccountAsync(Bybit.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <summary>
            Set the account deposits are credited to
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/set-deposit-acct" /></para>
            </summary>
            <param name="accountType">The account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetLeverageAsync(Bybit.Net.Enums.Category,System.String,System.Decimal,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Set leverage
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/leverage" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="buyLeverage">Buy leverage. Must be the same as sellLeverage under one-way mode</param>
            <param name="sellLeverage">Sell leverage. Must be the same as sellLeverage under one-way mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetCollateralAssetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set whether an asset should be used for collateral
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/set-collateral" /></para>
            </summary>
            <param name="asset">The asset. USDT and USDC can't be switched off</param>
            <param name="useForCollateral">Use the asset for collateral</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetMultipleCollateralAssetsAsync(System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitSetCollateralAssetRequest},System.Threading.CancellationToken)">
            <summary>
            Set whether assets should be used for collateral
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/batch-set-collateral" /></para>
            </summary>
            <param name="assets">The assets configuration</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetMarginModeAsync(Bybit.Net.Enums.MarginMode,System.Threading.CancellationToken)">
            <summary>
            Set the margin mode
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/set-margin-mode" /></para>
            </summary>
            <param name="marginMode">Margin mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.Int32,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, SEE https://announcements.bybit.com/en/article/risk-limit-update-transitioning-from-manual-to-auto-adjustment-bltf0fa535064561d9d/
            Set the risk limit
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/set-risk-limit" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="riskId">Risk id</param>
            <param name="positionIdx">Position idx</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetTakeProfitStopLossModeAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.StopLossTakeProfitMode,System.Threading.CancellationToken)">
            <summary>
            Set take profit/stop loss mode
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/tpsl-mode" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="tpSlMode">Mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SwitchCrossIsolatedMarginAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.TradeMode,System.Decimal,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Switch cross or isolated margin mode
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/cross-isolate" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="tradeMode">Trade mode</param>
            <param name="buyLeverage">Buy leverage</param>
            <param name="sellLeverage">Sell leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SwitchPositionModeAsync(Bybit.Net.Enums.Category,Bybit.Net.Enums.PositionMode,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Switch position mode
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/position-mode" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="mode">Mode</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.AccountType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Withdraw funds
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/withdraw" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="network">Network to use</param>
            <param name="toAddress">Target address</param>
            <param name="quantity">Quantity</param>
            <param name="tag">Tag</param>
            <param name="forceNetwork">Force on-chain withdrawal</param>
            <param name="accountType">Account type to withdraw from</param>
            <param name="feeType">Handling fee option</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.AddOrReduceMarginAsync(Bybit.Net.Enums.Category,System.String,System.Decimal,System.Nullable{Bybit.Net.Enums.PositionIdx},System.Threading.CancellationToken)">
            <summary>
            Manually add or reduce margin for isolated margin position
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/manual-add-margin" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="margin">Margin. Positive for adding, negative for reducing</param>
            <param name="positionIdx">Position idx</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetSpotMarginLeverageAsync(System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Set the user's maximum leverage in spot cross margin
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/set-leverage" /></para>
            </summary>
            <param name="leverage">New leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetSpotMarginStatusAndLeverageAsync(System.Threading.CancellationToken)">
            <summary>
            Query the Spot margin status and leverage of Unified account
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/status" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetSpotMarginTradeModeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Turn on / off spot margin trade
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/status" /></para>
            </summary>
            <param name="spotMarginMode">True to enable, false to disable</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetSpotMarginDataAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get spot margin data
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/vip-margin" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="vipLevel">Filter by VIP level</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetSpotMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get spot margin interest rate history
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/vip-margin" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="vipLevel">VIP level. If not set uses the account VIP level</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetBrokerEarningsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get broker earnings
            <para><a href="https://bybit-exchange.github.io/docs/v5/broker/exchange-earning" /></para>
            </summary>
            <param name="bizType">Filter by bizType</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="subAccountId">Filter by sub account id</param>
            <param name="limit">Max number of results</param>
            <param name="cursor">Next page cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetBrokerAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get broker account info
            <para><a href="https://bybit-exchange.github.io/docs/v5/broker/account-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.SetSpotHedgingModeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set spot hedging mode
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/set-spot-hedge" /></para>
            </summary>
            <param name="spotHedgingMode">Hedging mode on or not</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.RepayLiabilitiesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Manually repay the liabilities of Unified account
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/repay-liability" /></para>
            </summary>
            <param name="asset">Only repay this asset; if null repay all assets</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.RequestDemoFundsAsync(System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Request funds for demo trading
            <para><a href="https://bybit-exchange.github.io/docs/v5/demo#request-demo-trading-funds" /></para>
            </summary>
            <param name="funds">Dictionary of the asset and amount you want to receive. Only BTC, ETH, USDT or USDC supported</param>
            <param name="addOrReduce">Whether to add(true, default) or reduce (false) the funds with the amounts</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetConvertAssetsAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.Nullable{Bybit.Net.Enums.ConvertAssetSide},System.Threading.CancellationToken)">
            <summary>
            Get convert assets list
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/convert/convert-coin-list" /></para>
            </summary>
            <param name="accountType">Account type</param>
            <param name="asset">Filter by asset, for example `USDT`</param>
            <param name="side">Request side, from or to list</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetConvertQuoteAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a convert quote for 2 assets
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/convert/apply-quote" /></para>
            </summary>
            <param name="accountType">Account type</param>
            <param name="fromAsset">From asset (selling)</param>
            <param name="toAsset">To asset (buying)</param>
            <param name="quantity">Quantity to sell</param>
            <param name="clientOrderId">Request id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.ConvertConfirmQuoteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Confirm a convert quote and start the conversion
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/convert/confirm-quote" /></para>
            </summary>
            <param name="quoteTransactionId">The quote transaction id to confirm</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetConvertStatusAsync(Bybit.Net.Enums.ConvertAccountType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get status of a convert transaction
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/convert/get-convert-result" /></para>
            </summary>
            <param name="accountType">Account type</param>
            <param name="quoteTransactionId">Transaction id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetConvertHistoryAsync(System.Nullable{Bybit.Net.Enums.ConvertAccountType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get convert history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/convert/get-convert-history" /></para>
            </summary>
            <param name="accountType">Filter by account type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetTransferableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get quantity available for withdrawal/transfer from unified wallet
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/unified-trans-amnt" /></para>
            </summary>
            <param name="asset">Asset name</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiAccount.GetTransferableAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get quantity available for withdrawal/transfer from unified wallet
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/unified-trans-amnt" /></para>
            </summary>
            <param name="assets">Asset names, can request up to 20 assets</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan">
            <summary>
            Bybit crypto loan endpoints
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetCollateralAssetsAsync(System.Nullable{Bybit.Net.Enums.AccountLevel},System.String,System.Threading.CancellationToken)">
            <summary>
            Get collateral assets
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/collateral-coin" /></para>
            </summary>
            <param name="level">Account level</param>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetBorrowableAssetsAsync(System.Nullable{Bybit.Net.Enums.AccountLevel},System.String,System.Threading.CancellationToken)">
            <summary>
            Get borrowable asssets
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/loan-coin" /></para>
            </summary>
            <param name="accountLevel">Filter by account level</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetLimitsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get borrow/collateral limits
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/acct-borrow-collateral" /></para>
            </summary>
            <param name="loanAsset">The loan asset, for example `ETH`</param>
            <param name="collateralAsset">The collateral asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.BorrowAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.LoanTerm},System.Threading.CancellationToken)">
            <summary>
            Borrow an asset
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/borrow" /></para>
            </summary>
            <param name="loanAsset">The loan asset, for example `ETH`</param>
            <param name="collateralAsset">The collateral asset, for example `ETH`</param>
            <param name="loanQuantity">Quantity to borrow, either this or collateralQuantity should be provided</param>
            <param name="collateralQuantity">Quantity to use as collateral, either this or loanQuantity should be provided</param>
            <param name="loanTerm">The term for the loan, null for flexible term</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.RepayAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Repay a loan
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/repay" /></para>
            </summary>
            <param name="orderId">Loan order id</param>
            <param name="quantity">Quantity to repay</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetOpenLoansAsync(System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.LoanType},System.Nullable{Bybit.Net.Enums.LoanTerm},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get unpaid loans
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/unpaid-loan-order" /></para>
            </summary>
            <param name="orderId">Filter by loan order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="loanType">Filter by loan type</param>
            <param name="loanTerm">Filter by loan term</param>
            <param name="limit">Max number of results</param>
            <param name="cursor">Page cursor</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetRepayHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get repayment history
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/repay-transaction" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="repayId">Filter by repayment id</param>
            <param name="loanAsset">Filter by loan asset, for example `ETH`</param>
            <param name="limit">Max number of results</param>
            <param name="cursor">Page cursor</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetCompletedLoanOrdersAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get completed loan orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/comleted-loan-order" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="limit">Max number of results</param>
            <param name="cursor">Page cursor</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetMaxCollateralAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get max collateral for a loan
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/reduce-max-collateral-amt" /></para>
            </summary>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.AdjustCollateralAsync(System.String,System.Decimal,Bybit.Net.Enums.AdjustDirection,System.Threading.CancellationToken)">
            <summary>
            Adjust collateral
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/adjust-collateral" /></para>
            </summary>
            <param name="orderId">Order id</param>
            <param name="quantity">Quantity</param>
            <param name="direction">Direction</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiCryptoLoan.GetCollateralAdjustHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get collateral adjustment history
            <para><a href="https://bybit-exchange.github.io/docs/v5/crypto-loan/ltv-adjust-history" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="adjustId">Filter by adjust id</param>
            <param name="collateralAsset">Filter by collateral asset, for example `ETH`</param>
            <param name="limit">Max number of results</param>
            <param name="cursor">Page cursor</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiEarn">
            <summary>
            Bybit Earn endpoints
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiEarn.GetProductInfoAsync(Bybit.Net.Enums.EarnCategory,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Earn product info
            <para><a href="https://bybit-exchange.github.io/docs/v5/earn/product-info" /></para>
            </summary>
            <param name="category">Earn category</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiEarn.PlaceOrderAsync(Bybit.Net.Enums.EarnCategory,System.String,Bybit.Net.Enums.AccountType,System.String,Bybit.Net.Enums.EarnOrderType,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new Stake or Redeem order
            <para><a href="https://bybit-exchange.github.io/docs/v5/earn/create-order" /></para>
            </summary>
            <param name="category">Earn category</param>
            <param name="productId">Product id</param>
            <param name="accountType">Account type, either Fund or Unified</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="orderType">Stake or Redeem</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiEarn.GetOrderHistoryAsync(Bybit.Net.Enums.EarnCategory,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bybit-exchange.github.io/docs/v5/earn/order-history" /></para>
            </summary>
            <param name="category">Earn category</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiEarn.GetStakedPositionsAsync(Bybit.Net.Enums.EarnCategory,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get staked positions
            <para><a href="https://bybit-exchange.github.io/docs/v5/earn/position" /></para>
            </summary>
            <param name="category">Earn category</param>
            <param name="productId">Filter by product id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData">
            <summary>
            Bybit exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetAnnouncementsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get server announcements
            <para><a href="https://bybit-exchange.github.io/docs/v5/announcement" /></para>
            </summary>
            <param name="locale">Language, for example en-US</param>
            <param name="type">Filter by type</param>
            <param name="tag">Filter by tag</param>
            <param name="page">Page</param>
            <param name="limit">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get server time
            <para><a href="https://bybit-exchange.github.io/docs/v3/server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetDeliveryPriceAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get delivery price
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/delivery-price" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetFundingRateHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/history-fund-rate" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetHistoricalVolatilityAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get historical volatility
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/iv" /></para>
            </summary>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="quoteAsset">Quote asset, `USD` or `USDT`</param>
            <param name="period">Period</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetIndexPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get index price klines
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/index-kline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetInsuranceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get insurance pool data
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/insurance" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/kline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetLinearInverseSymbolsAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{Bybit.Net.Enums.SymbolStatus},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get linear/inverse symbols
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/instrument" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="status">Filter by status</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetLinearInverseTickersAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get linear/inverse tickers
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/tickers" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="expirationDate">Expiration date</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetMarkPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get mark price klines
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/mark-kline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetOpenInterestAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OpenInterestInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get open interest
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/open-interest" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interestInterval">Interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetOptionSymbolsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get option symbols
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/instrument" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetOptionTickersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get option tickers
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/tickers" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by asset, for example `ETH`</param>
            <param name="expirationDate">Expiration date</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetOrderbookAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/orderbook" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="limit">Limit of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetPremiumIndexPriceKlinesAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get premium index klines
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/preimum-index-kline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get risk limits
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="cursor">Next page cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetSpotSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get spot symbols
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/instrument" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetSpotTickersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Spot tickers
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/tickers" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetTradeHistoryAsync(Bybit.Net.Enums.Category,System.String,System.String,System.Nullable{Bybit.Net.Enums.OptionType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/recent-trade" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="optionType">Option type</param>
            <param name="limit">Limit of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetLeverageTokensAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get leverage token info
            <para><a href="https://bybit-exchange.github.io/docs/v5/lt/leverage-token-info" /></para>
            </summary>
            <param name="leverageToken">Filter by token</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetLeverageTokenMarketAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get leveraged token market info
            <para><a href="https://bybit-exchange.github.io/docs/v5/lt/leverage-token-reference" /></para>
            </summary>
            <param name="leverageToken">Token</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetLongShortRatioAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.DataPeriod,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get long/short ratio history
            <para><a href="https://bybit-exchange.github.io/docs/v5/market/long-short-ratio" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="period">Data recording period</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Limit for data size per page</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiExchangeData.GetSpotMarginTieredCollateralRatioAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get UTA loan tiered collateral ratio
            <para><a href="https://bybit-exchange.github.io/docs/v5/spot-margin-uta/tier-collateral-ratio" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading">
            <summary>
            Bybit trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.CancelAllOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{Bybit.Net.Enums.StopOrderType},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/cancel-all" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="settleAsset">Filter by settle asset</param>
            <param name="orderFilter">Order filter</param>
            <param name="stopOrderType">Stop order type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.CancelOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Threading.CancellationToken)">
            <summary>
            Cancel order
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/cancel-order" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Cancel by order id</param>
            <param name="clientOrderId">Cancel by client order id</param>
            <param name="orderFilter">Order filter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.EditOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/amend-order" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id of the order to edit</param>
            <param name="clientOrderId">Client order id of the order to edit</param>
            <param name="quantity">New quantity</param>
            <param name="price">New price</param>
            <param name="triggerPrice">New trigger price</param>
            <param name="triggerBy">New trigger </param>
            <param name="orderIv">New order Iv</param>
            <param name="takeProfit">New take profit price</param>
            <param name="stopLoss">New stop loss price</param>
            <param name="takeProfitTriggerBy">New take profit trigger</param>
            <param name="stopLossTriggerBy">New stop profit trigger</param>
            <param name="stopLossTakeProfitMode">New stop loss/take profit mode</param>
            <param name="takeProfitLimitPrice">New take profit limit price</param>
            <param name="stopLossLimitPrice">New stop loss limit price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetAssetExchangeHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get asset exchange history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/exchange" /></para>
            </summary>
            <param name="fromAsset">Filter by from asset</param>
            <param name="toAsset">Filter by to asset</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetBorrowQuotaAsync(System.String,Bybit.Net.Enums.OrderSide,System.Threading.CancellationToken)">
            <summary>
            Get spot borrow quota
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/spot-borrow-quota" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetDeliveryHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get delivery history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/delivery" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="expiryDate">Filter by expiry date</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetOrdersAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get real-time open orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/open-order" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="settleAsset">Filter by settle asset, for example `USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="openOnly">Open only</param>
            <param name="orderFilter">Order filter</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetOrderHistoryAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderStatus},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/order-list" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="status">Filter by status</param>
            <param name="orderFilter">Order filter</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetPositionsAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get positions
            <para><a href="https://bybit-exchange.github.io/docs/v5/position" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="settleAsset">Filter by settle asset, for example `USDT`</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.ConfirmRiskLimitAsync(Bybit.Net.Enums.Category,System.String,System.Threading.CancellationToken)">
            <summary>
            Confirm risk limit after being marked as only reducing positions
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/confirm-mmr" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetSettlementHistoryAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get settlement history
            <para><a href="https://bybit-exchange.github.io/docs/v5/asset/settlement" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetUserTradesAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Bybit.Net.Enums.TradeType},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trade history
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/execution" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="baseAsset">Filter by base asset, for example `ETH`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="tradeType">Filter by trade type</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.PlaceOrderAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OrderSide,Bybit.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.TriggerDirection},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TimeInForce},System.Nullable{Bybit.Net.Enums.PositionIdx},System.String,System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{Bybit.Net.Enums.SelfMatchPreventionType},System.Nullable{Bybit.Net.Enums.MarketUnit},System.Nullable{Bybit.Net.Enums.SlippageToleranceType},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Place an order
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/create-order" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="isLeverage">Is leverage</param>
            <param name="triggerDirection">Conditional order diraction</param>
            <param name="orderFilter">Order filter</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerBy">Trigger by</param>
            <param name="orderIv">Order implied volatility</param>
            <param name="timeInForce">Time in force</param>
            <param name="positionIdx">Position idx</param>
            <param name="clientOrderId">Client order id</param>
            <param name="takeProfitOrderType"></param>
            <param name="takeProfit">Take profit price</param>
            <param name="takeProfitLimitPrice"></param>        
            <param name="stopLossOrderType"></param>
            <param name="stopLoss">Stop loss price</param>
            <param name="stopLossLimitPrice"></param>        
            <param name="takeProfitTriggerBy">Take profit trigger</param>
            <param name="stopLossTriggerBy">Stop loss trigger</param>
            <param name="reduceOnly">Is reduce only</param>
            <param name="closeOnTrigger">Close on trigger</param>
            <param name="marketMakerProtection">Market maker protection</param>
            <param name="stopLossTakeProfitMode">StopLoss / TakeProfit mode</param>
            <param name="selfMatchPreventionType">Self match prevention type</param>
            <param name="marketUnit">The unit for qty when creating spot market orders for unified trading account</param>
            <param name="slippageToleranceType">Slippage tolerance Type for market orders</param>
            <param name="slippageTolerance">Slippage tolerance value</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.SetDisconnectCancelAllAsync(System.Int32,System.Nullable{Bybit.Net.Enums.ProductType},System.Threading.CancellationToken)">
            <summary>
            Set cancel all timeout on websocket disconnect
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/dcp" /></para>
            </summary>
            <param name="windowSeconds">Time after which to cancel all orders</param>
            <param name="productType">Type of product, defaults to Options</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetDisconnectCancelAllConfigAsync(System.Threading.CancellationToken)">
            <summary>
            Get DiconnectCancelAll/dcp configuration
            <para><a href="https://bybit-exchange.github.io/docs/v5/account/dcp-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.SetTradingStopAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.PositionIdx,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{Bybit.Net.Enums.OrderType},System.Threading.CancellationToken)">
            <summary>
            Set trading stop parameters
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/trading-stop" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="positionIdx">Position idx</param>
            <param name="takeProfit">Take profit price</param>
            <param name="stopLoss">Stop loss price</param>
            <param name="trailingStop">Trailing stop</param>
            <param name="takeProfitTrigger">Take profit trigger</param>
            <param name="stopLossTrigger">Stop loss trigger</param>
            <param name="activePrice">Active price</param>
            <param name="takeProfitQuantity">Take profit quantity</param>
            <param name="stopLossQuantity">Stop loss quantity</param>
            <param name="stopLossTakeProfitMode">StopLoss/TakeProfit mode</param>
            <param name="takeProfitLimitPrice">Take profit order limit price</param>
            <param name="stopLossLimitPrice">Stop loss order price</param>
            <param name="takeProfitOrderType">Take profit order type</param>
            <param name="stopLossOrderType">Stop loss order type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetClosedProfitLossAsync(Bybit.Net.Enums.Category,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get closed profit and loss
            <para><a href="https://bybit-exchange.github.io/docs/v5/position/close-pnl" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results per page</param>
            <param name="cursor">Pagination cursor</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.PlaceMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders. Note that a successful response doesn't mean all orders were correctly processed; check the order results in the call response.
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/batch-place" /></para>
            </summary>
            <param name="category">The category</param>
            <param name="orderRequests">Request data</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.CancelMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders. Note that a successful response doesn't mean all orders were correctly processed; check the order results in the call response.
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/batch-cancel" /></para>
            </summary>
            <param name="category">The category</param>
            <param name="orderRequests">Request data</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.EditMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitEditOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Edit multiple orders. Note that a successful response doesn't mean all orders were correctly processed; check the order results in the call response.
            <para><a href="https://bybit-exchange.github.io/docs/v5/order/batch-amend" /></para>
            </summary>
            <param name="category">The category</param>
            <param name="orderRequests">Request data</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.PurchaseLeverageTokenAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Purchase a leverage token
            <para><a href="https://bybit-exchange.github.io/docs/v5/lt/purchase" /></para>
            </summary>
            <param name="token">Token id</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Custom order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.RedeemLeverageTokenAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Redeem a leverage token
            <para><a href="https://bybit-exchange.github.io/docs/v5/lt/redeem" /></para>
            </summary>
            <param name="token">Token id</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Custom order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitRestClientApiTrading.GetLeverageTokenOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{Bybit.Net.Enums.LeverageTokenRecordType},System.Threading.CancellationToken)">
            <summary>
            Get leverage token order history
            <para><a href="https://bybit-exchange.github.io/docs/v5/lt/order-record" /></para>
            </summary>
            <param name="token">Filter by token</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="type">Filter by type or record</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi">
            <summary>
            Bybit streaming data subscriptions
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/kline" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi.SubscribeToKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/kline" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi.SubscribeToOrderbookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/orderbook" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="depth">The order book depth</param>
            <param name="updateHandler">Update handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientBaseApi.SubscribeToOrderbookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/orderbook" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="depth">The order book depth</param>
            <param name="updateHandler">Update handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi">
            <summary>
            Bybit inverse contract data streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, use <see cref="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToAllLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)"/> instead
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/liquidation" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, use <see cref="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToAllLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)"/> instead
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/liquidation" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToAllLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/all-liquidation" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApi.SubscribeToAllLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/all-liquidation" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientInverseApiShared">
            <summary>
            Shared interface for Spot inverse futures socket API usage
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi">
            <summary>
            Bybit linear data streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, use <see cref="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToAllLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)"/> instead
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/liquidation" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLiquidation}},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, use <see cref="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToAllLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)"/> instead
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/liquidation" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToAllLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/all-liquidation" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApi.SubscribeToAllLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/all-liquidation" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientLinearApiShared">
            <summary>
            Shared interface for Spot linear futures API usage
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi">
            <summary>
            Bybit option data streams
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/kline" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/kline" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToOrderbookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/orderbook" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="depth">The order book depth</param>
            <param name="updateHandler">Update handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToOrderbookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOrderbook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/orderbook" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="depth">The order book depth</param>
            <param name="updateHandler">Update handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOptionTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientOptionApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOptionTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi">
            <summary>
            Bybit user data streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToGreekUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitGreeks}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to Greek updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/greek" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/order" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPositionUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/position" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitUserTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/execution" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToMinimalUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to minimal trade updates. There is less data available, but updates are pushed significantly faster
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/fast-execution" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToWalletUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitBalance}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to wallet balance updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/wallet" /></para>
            </summary>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.PlaceOrderAsync(Bybit.Net.Enums.Category,System.String,Bybit.Net.Enums.OrderSide,Bybit.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.TriggerDirection},System.Nullable{Bybit.Net.Enums.OrderFilter},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TimeInForce},System.Nullable{Bybit.Net.Enums.PositionIdx},System.String,System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.OrderType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{Bybit.Net.Enums.SelfMatchPreventionType},System.Nullable{Bybit.Net.Enums.MarketUnit},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="isLeverage">Is leverage</param>
            <param name="triggerDirection">Conditional order diraction</param>
            <param name="orderFilter">Order filter</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerBy">Trigger by</param>
            <param name="orderIv">Order implied volatility</param>
            <param name="timeInForce">Time in force</param>
            <param name="positionIdx">Position idx</param>
            <param name="clientOrderId">Client order id</param>
            <param name="takeProfitOrderType"></param>
            <param name="takeProfit">Take profit price</param>
            <param name="takeProfitLimitPrice"></param>        
            <param name="stopLossOrderType"></param>
            <param name="stopLoss">Stop loss price</param>
            <param name="stopLossLimitPrice"></param>        
            <param name="takeProfitTriggerBy">Take profit trigger</param>
            <param name="stopLossTriggerBy">Stop loss trigger</param>
            <param name="reduceOnly">Is reduce only</param>
            <param name="closeOnTrigger">Close on trigger</param>
            <param name="marketMakerProtection">Market maker protection</param>
            <param name="stopLossTakeProfitMode">StopLoss / TakeProfit mode</param>
            <param name="selfMatchPreventionType">Self match prevention type</param>
            <param name="marketUnit">The unit for qty when creating spot market orders for unified trading account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.EditOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.TriggerType},System.Nullable{Bybit.Net.Enums.StopLossTakeProfitMode},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id of the order to edit</param>
            <param name="clientOrderId">Client order id of the order to edit</param>
            <param name="quantity">New quantity</param>
            <param name="price">New price</param>
            <param name="triggerPrice">New trigger price</param>
            <param name="triggerBy">New trigger </param>
            <param name="orderIv">New order Iv</param>
            <param name="takeProfit">New take profit price</param>
            <param name="stopLoss">New stop loss price</param>
            <param name="takeProfitTriggerBy">New take profit trigger</param>
            <param name="stopLossTriggerBy">New stop profit trigger</param>
            <param name="stopLossTakeProfitMode">New stop loss/take profit mode</param>
            <param name="takeProfitLimitPrice">New take profit limit price</param>
            <param name="stopLossLimitPrice">New stop loss limit price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.CancelOrderAsync(Bybit.Net.Enums.Category,System.String,System.String,System.String,System.Nullable{Bybit.Net.Enums.OrderFilter},System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Cancel by order id</param>
            <param name="clientOrderId">Cancel by client order id</param>
            <param name="orderFilter">Order filter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.PlaceMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline#request-parameters-2" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="orderRequests">Order requests</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.EditMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitEditOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Edit multiple orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline#request-parameters-2" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="orderRequests">Order requests</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.CancelMultipleOrdersAsync(Bybit.Net.Enums.Category,System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/trade/guideline#request-parameters-2" /></para>
            </summary>
            <param name="category">Category</param>
            <param name="orderRequests">Order requests</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApi.SubscribeToDisconnectCancelAllTopicAsync(Bybit.Net.Enums.ProductType,System.Threading.CancellationToken)">
            <summary>
            Subscribe to disconnect cancel all topics. It doesn't provide updates, but works with the <see href="https://bybit-exchange.github.io/docs/v5/order/dcp">DisconnectCancelAll</see> configuration
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/private/dcp" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientPrivateApiShared">
            <summary>
            Shared interface for private user socket API usage
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi">
            <summary>
            Bybit spot data streams
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-kline" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenKlineUpdatesAsync(System.String,Bybit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token kline updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-kline" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenNavUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token NAV updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-nav" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenNavUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token NAV updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-nav" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-ticker" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToLeveragedTokenTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to leveraged token ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/etp-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bybit.Net.Objects.Models.V5.BybitTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://bybit-exchange.github.io/docs/v5/websocket/public/trade" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="handler">Data handler</param>
            <param name="ct">Cancellation token. Cancelling will cancel the subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.V5.IBybitSocketClientSpotApiShared">
            <summary>
            Shared interface for Spot socket API usage
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.Clients.IBybitRestClientApiShared">
            <summary>
            Shared interface for rest API usage
            </summary>
        </member>
        <member name="T:Bybit.Net.Interfaces.IBybitOrderBookFactory">
            <summary>
            Bybit order book factory
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.IBybitOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.IBybitOrderBookFactory.Options">
            <summary>
            Options order book factory methods
            </summary>
        </member>
        <member name="P:Bybit.Net.Interfaces.IBybitOrderBookFactory.LinearInverse">
            <summary>
            Linear/Inverse order book factory methods
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitOrderBookFactory.Create(System.String,Bybit.Net.Enums.Category,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook specifying the category
            </summary>
            <param name="symbol">The symbol</param>
            <param name="category">The symbol category</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitOrderBookFactory.CreateLinearInverse(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a Linear/Inverse symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitOrderBookFactory.CreateOption(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for an Option symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitOrderBookFactory.CreateSpot(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a Spot symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Interfaces.IBybitTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new kline tracker
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Kline interval</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="M:Bybit.Net.Interfaces.IBybitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:Bybit.Net.Objects.BybitApiAddresses">
            <summary>
            Api addresses usable for the Bybit clients
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.BybitApiAddresses.RestBaseAddress">
            <summary>
            Rest API base address
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.BybitApiAddresses.SocketBaseAddress">
            <summary>
            Socket API base address
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.Default">
            <summary>
            The default addresses to connect to the Bybit.com API
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.TestNet">
            <summary>
            The addresses to connect to the Bybit testnet
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.Netherlands">
            <summary>
            The addresses to connect to the main net for users from The Netherlands
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.HongKong">
            <summary>
            The addresses to connect to the Bybit main net for users from HongKong
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.Turkey">
            <summary>
            The addresses to connect to the Bybit main net for users from Turkey
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.Kazakhstan">
            <summary>
            The addresses to connect to the Bybit main net for users from Kazakhstan
            </summary>
        </member>
        <member name="F:Bybit.Net.Objects.BybitApiAddresses.DemoTrading">
            <summary>
            The addresses to connect to the Bybit demo trading environment
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.UnifiedMarginStatus">
            <summary>
            Unified margin status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.MarginMode">
            <summary>
            Margin info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.DcpStatus">
            <summary>
            Disconnect-CancelAll-Prevention status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.SmpGroup">
            <summary>
            Smp group id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.DcpTimeWindow">
            <summary>
            Dcp trigger time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.IsMasterTrader">
            <summary>
            Whether the account is a master trader (copytrading)
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountInfo.SpotHedgingStatus">
            <summary>
            Whether the unified account enables Spot hedging
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAccountTypeInfo">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountTypeInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountTypeInfo.AccountTypes">
            <summary>
            Account types
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAdjustHistory">
            <summary>
            Adjustment history
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.AdjustId">
            <summary>
            Adjust id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.AdjustTime">
            <summary>
            Adjust time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.AfterLtv">
            <summary>
            After LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.AdjustDirection">
            <summary>
            Adjustment direction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustHistory.PreLtv">
            <summary>
            Pre LTV
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAdjustId">
            <summary>
            Adjust id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAdjustId.AdjustId">
            <summary>
            Adjust id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfoResponse">
            <summary>
            Allowed deposit response
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfoResponse.Assets">
            <summary>
            Asset list
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.AssetShowName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.NetworkType">
            <summary>
            Network type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.BlockConfirmNumber">
            <summary>
            Deposit confirmation number
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllowedDepositInfo.MinDepositAmount">
            <summary>
            Min deposit amount
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAnnouncement">
            <summary>
            Announcmeent
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Timestamp">
            <summary>
            Announcement time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.PublishTime">
            <summary>
            Publish time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.StartTimestamp">
            <summary>
            Start time of the announcement
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.EndTimestamp">
            <summary>
            End time of the announcement
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAnnouncement.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo">
            <summary>
            Api key info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Note">
            <summary>
            Key name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.ApiKey">
            <summary>
            Api key
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Secret">
            <summary>
            Secret (when creating new API key)
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Readonly">
            <summary>
            Is read only
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Ips">
            <summary>
            Allowed ip addresses
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.DeadlineDays">
            <summary>
            Remaining valid days
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.ExpireTime">
            <summary>
            Expire time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Unified">
            <summary>
            Is unified margin account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Uta">
            <summary>
            Is unified trade account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.InviterId">
            <summary>
            Inviter id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.MarketMakerLevel">
            <summary>
            Market maker level
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.AffiliateId">
            <summary>
            Affiliate id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.RsaPublicKey">
            <summary>
            Public key
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.IsMaster">
            <summary>
            Is master
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.ParentUid">
            <summary>
            Parent Uid, 0 if main account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.KycLevel">
            <summary>
            Parent Uid, 0 if main account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.KycRegion">
            <summary>
            Parent Uid, 0 if main account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.ApiKeyType">
            <summary>
            The type of api key. 1：personal, 2：connected to the third-party app
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitApiKeyInfo.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPermissions">
            <summary>
            Permission info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.ContractTrade">
            <summary>
            Contract trade permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Spot">
            <summary>
            Spot permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Wallet">
            <summary>
            Wallet permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Options">
            <summary>
            Options permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Derivatives">
            <summary>
            Derivatives permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.CopyTrading">
            <summary>
            Copy trading permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.BlockTrade">
            <summary>
            Block trade permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Exchange">
            <summary>
            Exchange permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.NFT">
            <summary>
            NFT permissions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPermissions.Affiliate">
            <summary>
            Affiliate permissions
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAllAssetBalances">
            <summary>
            Asset balances
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllAssetBalances.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllAssetBalances.MemberId">
            <summary>
            Member id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAllAssetBalances.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSingleAssetBalance">
            <summary>
            Asset balances
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSingleAssetBalance.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSingleAssetBalance.MemberId">
            <summary>
            Member id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSingleAssetBalance.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAssetAccountBalance">
            <summary>
            Account asset balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetAccountBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetAccountBalance.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetAccountBalance.TransferBalance">
            <summary>
            Transfer balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetAccountBalance.Bonus">
            <summary>
            Bonus
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAssetExchange">
            <summary>
            Asset exchange info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.FromQuantity">
            <summary>
            From quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.ToQuantity">
            <summary>
            To quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.ExchangeRate">
            <summary>
            Exchange rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetExchange.ExchangeTransactionId">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAccountAssetInfo">
            <summary>
            Account asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountAssetInfo.Status">
            <summary>
            Account status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAccountAssetInfo.Assets">
            <summary>
            Assdet info
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAssetInfo">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetInfo.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetInfo.Frozen">
            <summary>
            Frozen amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetInfo.Free">
            <summary>
            Free amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetInfo.Withdrawing">
            <summary>
            Amount in withdrawing
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.AccountLtv">
            <summary>
            Account LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.AccountInitialMarginRate">
            <summary>
            Account initial margin rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.AccountMaintenanceMarginRate">
            <summary>
            Account maintenance margin rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalEquity">
            <summary>
            Account equity in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalWalletBalance">
            <summary>
            Total wallet balance in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalMarginBalance">
            <summary>
            Total margin balance in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalAvailableBalance">
            <summary>
            Total available balance in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalPerpUnrealizedPnl">
            <summary>
            Unrealized profit and loss in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalInitialMargin">
            <summary>
            Iniital margin in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.TotalMaintenanceMargin">
            <summary>
            Maintenance margin in USD
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBalance.Assets">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAssetBalance">
            <summary>
            Asset balance info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.Equity">
            <summary>
            Asset equity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.UsdValue">
            <summary>
            Asset usd value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.WalletBalance">
            <summary>
            Asset balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.Free">
            <summary>
            [Spot] Available balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.Locked">
            <summary>
            [Spot] Locked balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.BorrowAmount">
            <summary>
            Borrow amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.AvailableToBorrow">
            <summary>
            Available borrow amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.AvailableToWithdraw">
            <summary>
            Available withdrawal amount, not available for Unified account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.AccruedInterest">
            <summary>
            Accrued interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.TotalOrderInitialMargin">
            <summary>
            Total order initial margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.TotalPositionInitialMargin">
            <summary>
            Total position maintenance marging
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.TotalPositionMaintenanceMargin">
            <summary>
            Total position maintenance margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.Bonus">
            <summary>
            [Unified] Bonus
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.SpotHedgingQuantity">
            <summary>
            [Unified] The spot asset quantity that is used to hedge in the portfolio margin, truncate to 8 decimals and "0" by default
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.CollateralSwitch">
            <summary>
            Whether it can be used as a margin collateral currency
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetBalance.MarginCollateral">
            <summary>
            Whether the collateral is turned on by user (user)
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBasicKline">
            <summary>
            Mark price kline info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBasicKline.StartTime">
            <summary>
            Kline open time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBasicKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBasicKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBasicKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBasicKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBatchOrderId">
            <summary>
            Order ids
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchOrderId.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchOrderId.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchOrderId.OrderId">
            <summary>
            The order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchOrderId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchOrderId.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBatchResult">
            <summary>
            Batch item result
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchResult.Code">
            <summary>
            Result code
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchResult.Message">
            <summary>
            Result message
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBatchResult`1">
            <summary>
            Batch item result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBatchResult`1.Data">
            <summary>
            Response data
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetWrapper.VipAssetList">
            <summary>
            Vip asset list
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBorrowAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAsset.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAsset.AccountLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.BorrowingAccuracy">
            <summary>
            Borrowing accuracy
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.FlexibleHourlyInterestRate">
            <summary>
            Flexible hourly interest rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.HourlyInterestRate14D">
            <summary>
            Hourly interest rate14 d
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.HourlyInterestRate180D">
            <summary>
            Hourly interest rate180 d
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.HourlyInterestRate30D">
            <summary>
            Hourly interest rate30 d
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.HourlyInterestRate7D">
            <summary>
            Hourly interest rate7 d
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.HourlyInterestRate90D">
            <summary>
            Hourly interest rate90 d
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.MaxBorrowingQuantity">
            <summary>
            Max borrowing quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowAssetInfo.MinBorrowingQuantity">
            <summary>
            Min borrowing quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBorrowHistory">
            <summary>
            Borrow history info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.CreateTime">
            <summary>
            Created time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.BorrowCost">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.HourlyBorrowRate">
            <summary>
            Houly borrow rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.InterestBearingBorrowSize">
            <summary>
            Interest Bearing Borrow Size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.CostExemption">
            <summary>
            Cost exemption
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.BorrowQuantity">
            <summary>
            Total borrow quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.UnrealisedLoss">
            <summary>
            Unrealized loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowHistory.FreeBorrowedQuantity">
            <summary>
            The borrowed quantity for interest free
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBorrowLimits">
            <summary>
            Borrow limit
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.MaxCollateralQuantity">
            <summary>
            Max collateral quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.MaxLoanQuantity">
            <summary>
            Max loan quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.MinCollateralQuantity">
            <summary>
            Min collateral quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowLimits.MinLoanQuantity">
            <summary>
            Min loan quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBorrowQuota">
            <summary>
            Borrow quota info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.MaxTradeQuantity">
            <summary>
            Max trade quantity in base asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.MaxTradeAmount">
            <summary>
            Max trade amount in quote asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.BorrowAsset">
            <summary>
            Borrow asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.SpotMaxTradeQty">
            <summary>
            No matter your Spot margin switch on or not, it always returns actual qty of base coin you can trade or you have, up to 4 decimals
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBorrowQuota.SpotMaxTradeAmount">
            <summary>
            No matter your Spot margin switch on or not, it always returns actual amount of quote coin you can trade or you have, up to 8 decimals
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo">
            <summary>
            Broker account info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo.SubAccountCount">
            <summary>
            Current sub account quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo.MaxSubAccountCount">
            <summary>
            Max sub account quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo.BaseFeeRebateRates">
            <summary>
            Base fee rebate rates
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerAccountInfo.MarkupFeeRebateRates">
            <summary>
            Markup fee rebate rates
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBrokerRebateRate">
            <summary>
            Rebate rate info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerRebateRate.Spot">
            <summary>
            Spot rebate rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerRebateRate.Derivatives">
            <summary>
            Derivatives rebate rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerRebateRate.Convert">
            <summary>
            Convert rebate rate
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBrokerEarnings">
            <summary>
            Broker earnings info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerEarnings.TotalEarnings">
            <summary>
            Total earnings info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerEarnings.Details">
            <summary>
            Earning details
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerEarnings.NextPageCursor">
            <summary>
            Cursor which can be used for paginiation
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTotalEarnings">
            <summary>
            Total earnings info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTotalEarnings.Spot">
            <summary>
            Spot earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTotalEarnings.Convert">
            <summary>
            Convert earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTotalEarnings.Derivatives">
            <summary>
            Derivatives earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTotalEarnings.Options">
            <summary>
            Options earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTotalEarnings.Total">
            <summary>
            Total earnings
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBrokerEarning">
            <summary>
            Asset earning info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerEarning.Asset">
            <summary>
            The earned asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBrokerEarning.Earning">
            <summary>
            Earned quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitEarningDetails">
            <summary>
            Earning details
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.BizTyp">
            <summary>
            BizType
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.Earning">
            <summary>
            Earned quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.MarkupEarning">
            <summary>
            Markup earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.BaseFeeEarning">
            <summary>
            Base fee earnings
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarningDetails.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest">
            <summary>
            Request info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest.OrderId">
            <summary>
            The order id to cancel, either this or ClientOrderId should be provided
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest.ClientOrderId">
            <summary>
            The client order id to cancel, either this or OrderId should be provided
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCancelOrderRequest.OrderFilter">
            <summary>
            Order filter
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitClosedPnl">
            <summary>
            Closed profit and loss info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.TradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.ClosedSize">
            <summary>
            Closed size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.EntryValue">
            <summary>
            Cumulated entry position value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.AverageEntryPrice">
            <summary>
            Average entry price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.ExitValue">
            <summary>
            Cumulated exit position value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.AverageExitPrice">
            <summary>
            Average exit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.ClosedPnl">
            <summary>
            Close PnL
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.FillCount">
            <summary>
            Number of fills
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.CreateTime">
            <summary>
            Created time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitClosedPnl.UpdateTime">
            <summary>
            Updated time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitCollateralAssets">
            <summary>
            Collateral asset info
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitCollateralAsset">
            <summary>
            Collateral asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAsset.AccountLevel">
            <summary>
            Account level
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAsset.Assets">
            <summary>
            Assets list
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo">
            <summary>
            Collateral asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.CollateralAccuracy">
            <summary>
            Precision for collateral
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.InitialLtv">
            <summary>
            Initial LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.LiquidationLtv">
            <summary>
            Liquidation LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.MarginCallLtv">
            <summary>
            Margin call LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralAssetInfo.MaxLimit">
            <summary>
            Max Limit
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitCollateralInfo">
            <summary>
            Collateral info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.HourlyBorrowRate">
            <summary>
            Hourly borrow rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.MaxBorrowAmount">
            <summary>
            Max borrow amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.FreeBorrowAmount">
            <summary>
            Free borrow amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.FreeBorrowingLimit">
            <summary>
            The maximum limit for interest-free borrowing
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.BorrowAmount">
            <summary>
            Borrow amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.OtherBorrowAmount">
            <summary>
            The sum of borrowing amount for other accounts under the same main account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.AvailableToBorrow">
            <summary>
            Available to borrow
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.Borrowable">
            <summary>
            Is borrowable
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.MarginCollateral">
            <summary>
            Whether it can be used as a margin collateral currency
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.CollateralSwitch">
            <summary>
            Whether the collateral is turned on by user 
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.CollateralRatio">
            <summary>
            Collateral ratio
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitCollateralInfo.BorrowUsageRate">
            <summary>
            Borrow usage rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAssetWrapper.Assets">
            <summary>
            Coins
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitConvertAsset">
            <summary>
            Convert asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.Icon">
            <summary>
            Icon
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.IconNight">
            <summary>
            Icon night
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.Precision">
            <summary>
            The max amount of decimal places to use
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.AssetType">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.BalanceValue">
            <summary>
            Balance USDT value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.FromAssetMinQuantity">
            <summary>
            The minimum quantity of fromAsset per transaction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.FromAssetMaxQuantity">
            <summary>
            The maximum quantity of fromAsset per transaction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.DisableFrom">
            <summary>
            true: the asset is disabled to be fromAsset, false: the asset is allowed to be fromAsset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertAsset.DisableTo">
            <summary>
            true: the asset is disabled to be toAsset, false: the asset is allowed to be toAsset
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitConvertQuote">
            <summary>
            Convert quote
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.QuoteTransactionId">
            <summary>
            Quote transaction id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.ExchangeRate">
            <summary>
            Exchange rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.FromAssetType">
            <summary>
            From asset type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.ToAssetType">
            <summary>
            To asset type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.FromQuantity">
            <summary>
            From quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.ToQuantity">
            <summary>
            To quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.ExpireTime">
            <summary>
            Expire time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertQuote.RequestId">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransactionWrapper.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransactionListWrapper.List">
            <summary>
            List
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitConvertTransaction">
            <summary>
            Convert transaction info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ExchangeTransactionId">
            <summary>
            Exchange transaction id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.FromAssetType">
            <summary>
            From asset type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.FromQuantity">
            <summary>
            From quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ToAssetType">
            <summary>
            To asset type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ToQuantity">
            <summary>
            To quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ExchangeStatus">
            <summary>
            Exchange status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.ConvertRate">
            <summary>
            Convert rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransaction.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitConvertTransactionResult">
            <summary>
            Transaction info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransactionResult.QuoteTransactionId">
            <summary>
            Quote transaction id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitConvertTransactionResult.Status">
            <summary>
            Convert status
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDcpStatus">
            <summary>
            Dcp status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDcpStatus.Product">
            <summary>
            Product types
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDcpStatus.Activated">
            <summary>
            Is activated
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDcpStatus.TimeWindow">
            <summary>
            Timewindow in seconds
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawal">
            <summary>
            Delayed withdrawal info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawal.LimitQuantityUsd">
            <summary>
            Limit quantity usd
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawal.WithdrawableQuantities">
            <summary>
            Withdrawable amount per account
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantities">
            <summary>
            Delayed withdrawal account info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantities.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantities.Fund">
            <summary>
            Fund account
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantity">
            <summary>
            Delayed withdrawal account quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantity.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantity.WithdrwawableQuantity">
            <summary>
            Withdrawable quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDelayedWithdrawalQuantity.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDeliveryPrice">
            <summary>
            Delivery price info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryPrice.DeliveryPrice">
            <summary>
            Delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryPrice.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord">
            <summary>
            Delivery record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.Position">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.DeliveryPrice">
            <summary>
            Delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.Strike">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeliveryRecord.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDeposits">
            <summary>
            Deposits info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposits.Deposits">
            <summary>
            Deposit list
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDeposit">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Network">
            <summary>
            Chain
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.DepositFee">
            <summary>
            Deposit fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.SuccessTime">
            <summary>
            Time of success
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.Confirmations">
            <summary>
            Number of confirmations
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.TransactionIndex">
            <summary>
            Transaction index
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.BlockHash">
            <summary>
            Block hash
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.DepositLimit">
            <summary>
            Deposit limit. -1 if there is no limit.
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.DepositType">
            <summary>
            The deposit type. 0: normal deposit, 10: the deposit reaches daily deposit limit, 20: abnormal deposit
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDeposit.FromAddress">
            <summary>
            Source address
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositAddress.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.NetworkType">
            <summary>
            Network type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.DepositAddress">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.DepositTag">
            <summary>
            Deposit tag
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.DepositLimit">
            <summary>
            Deposit limit. -1 if there is no limit.
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitDepositChainAddress.ContractAddress">
            <summary>
            Network contract asset, only last 6 characters
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitEarnOrder">
            <summary>
            Earn order info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.OrderValue">
            <summary>
            Order value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.OrderType">
            <summary>
            Earn order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.OrderLinkId">
            <summary>
            Order link id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.Status">
            <summary>
            Earn status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitEarnProduct">
            <summary>
            Product info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.Category">
            <summary>
            Earn category
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.EstimateApr">
            <summary>
            Estimate APR
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.MinStakeQuantity">
            <summary>
            Min stake quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.MaxStakeQuantity">
            <summary>
            Max stake quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.Precision">
            <summary>
            Precision
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnProduct.Status">
            <summary>
            Earn product status
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition">
            <summary>
            Staked Earn position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition.TotalPnl">
            <summary>
            Total pnl
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEarnStakedPosition.ClaimableYield">
            <summary>
            Claimable yield
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest">
            <summary>
            Request info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.OrderId">
            <summary>
            Edit by order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.ClientOrderId">
            <summary>
            Edit by client order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.Quantity">
            <summary>
            New order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.Price">
            <summary>
            Price if order type is not market
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TakeProfit">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.StopLoss">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TriggerBy">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TakeProfitLimitPrice">
            <summary>
            Take profit limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.StopLossLimitPrice">
            <summary>
            Stop loss limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.OrderImpliedVolatility">
            <summary>
            Implied volatility. option only. Pass the real value, e.g for 10%, 0.1 should be passed. orderIv has a higher priority when price is passed as well
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TakeProfitStopLossMode">
            <summary>
            Take profit/Stop loss mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.StopLossTriggerBy">
            <summary>
            Stop Loss Trigger price type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitEditOrderRequest.TakeProfitTriggerBy">
            <summary>
            Take Profit Trigger price type
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitFeeRate">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFeeRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFeeRate.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFeeRate.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFeeRate.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitFundingHistory">
            <summary>
            Funding history
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFundingHistory.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFundingHistory.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitFundingHistory.Timestamp">
            <summary>
            Funding timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitGreeks">
            <summary>
            Greeks
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitGreeks.BaseAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitGreeks.TotalDelta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitGreeks.TotalGamma">
            <summary>
            Gamma
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitGreeks.TotalVega">
            <summary>
            Vega
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitGreeks.TotalTheta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitHistoricalVolatility">
            <summary>
            Volatility info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitHistoricalVolatility.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitHistoricalVolatility.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitHistoricalVolatility.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitInsurance">
            <summary>
            Insurance pool info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInsurance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInsurance.Symbols">
            <summary>
            Symbols
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInsurance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInsurance.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitInternalDeposit">
            <summary>
            Internal deposit info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Type">
            <summary>
            Type (1: Internal deposit)
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Address">
            <summary>
            Email or phone number
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.CreateTime">
            <summary>
            Timestamp 
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitInternalDeposit.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKline.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.StartTime">
            <summary>
            Kline start time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.EndTime">
            <summary>
            Kline end time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.Interval">
            <summary>
            Interval
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.Confirm">
            <summary>
            Is kline finished or still updating
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitKlineUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav">
            <summary>
            Leveraged token nav info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Nav">
            <summary>
            Net asset value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.BasketPosition">
            <summary>
            Basket position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.BasketLoan">
            <summary>
            Basket loan
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Circulation">
            <summary>
            Circulation
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenNav.Basket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker">
            <summary>
            Leveraged token info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.Price24hPercentage">
            <summary>
            Price 24h change percentage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.PreviousPrice24h">
            <summary>
            Price 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.HighPrice24h">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeveragedTokenTicker.LowPrice24h">
            <summary>
            Low price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageToken">
            <summary>
            Leverage token info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.Id">
            <summary>
            Token abbreviation
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.Name">
            <summary>
            Full name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MaxDailyBuy">
            <summary>
            Maximum purchase amount in a single day
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MaxRedeem">
            <summary>
            Single Maximum redemption quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MinRedeem">
            <summary>
            Single Minimum redemption quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.MaxRedeemDaily">
            <summary>
            Maximum redeem amount in a single day
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.BuyFeeRate">
            <summary>
            Purchase fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.RedeemFeeRate">
            <summary>
            Redeem fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.Status">
            <summary>
            Token status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.FundingFee">
            <summary>
            Funding fee charged daily for users holding leveraged token
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.FundingFeeTime">
            <summary>
            The time to charge funding fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.ManageFundingFee">
            <summary>
            Management fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.ManageFundingFeeTime">
            <summary>
            The time to charge management fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.Value">
            <summary>
            Nominal asset value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.NetValue">
            <summary>
            Net value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageToken.Total">
            <summary>
            Total purchase upper limit
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory">
            <summary>
            Leverage token order record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Token">
            <summary>
            Token abbreviation
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.OrderType">
            <summary>
            Order record type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Value">
            <summary>
            Filled value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Quantity">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.PurchaseId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.ClientOrderId">
            <summary>
            Serial number
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenHistory.Orderime">
            <summary>
            Order time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket">
            <summary>
            Leverage token market info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.Basket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.Circulation">
            <summary>
            Circulating supply in the secondary market
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.Leverage">
            <summary>
            Real leverage calculated by last traded price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.Nav">
            <summary>
            Net value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.NavTime">
            <summary>
            Update time for net asset value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenMarket.Token">
            <summary>
            Token name
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord">
            <summary>
            Leverage token purchase record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.Token">
            <summary>
            Token abbreviation
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.QuantityFilled">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.ValueFilled">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.Quantity">
            <summary>
            Purchase amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.ClientOrderId">
            <summary>
            Serial number
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRecord.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageTokenPurchase">
            <summary>
            Purchase record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenPurchase.PurchaseId">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRedemption">
            <summary>
            Purchase record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLeverageTokenRedemption.RedeemId">
            <summary>
            Redeem id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLiabilityRepayment">
            <summary>
            Liability repayment info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiabilityRepayment.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiabilityRepayment.RepaymentQuantity">
            <summary>
            Repayment quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol">
            <summary>
            Linear/Inverse symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.SettleAsset">
            <summary>
            Settle asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.LaunchTime">
            <summary>
            Launch time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.DeliveryFeeRate">
            <summary>
            Delivery fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.PriceScale">
            <summary>
            Price scale
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.UnifiedMarginTrade">
            <summary>
            Unified margin trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.FundingInterval">
            <summary>
            Funding interval in minutes
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.CopyTrading">
            <summary>
            Copy trading support
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.UpperFundingRate">
            <summary>
            Upper limit of funding date
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.LowerFundingRate">
            <summary>
            Lower limit of funding data
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.IsPrelisting">
            <summary>
            Whether the contract is a pre-market contract
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.PrelistingInfo">
            <summary>
            Prelisting information
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.LotSizeFilter">
            <summary>
            Lot size order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.PriceFilter">
            <summary>
            Price order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.LeverageFilter">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseSymbol.BybitRiskParameters">
            <summary>
            Risk limit parameters
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitRiskParameters">
            <summary>
            Risk limit parameters
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskParameters.PriceLimitRatioX">
            <summary>
            Price limit ratio X value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskParameters.PriceLimitRatioY">
            <summary>
            Price limit ratio Y value
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPrelistingInfo">
            <summary>
            Prelisting info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingInfo.CurrentPhase">
            <summary>
            Current auction phase
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingInfo.Phases">
            <summary>
            Phases
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingInfo.Fees">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPrelistingFees">
            <summary>
            Prelisting fee info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingFees.AuctionFeeRate">
            <summary>
            The trading fee rate during auction phase
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingFees.TakerFeeRate">
            <summary>
            The taker fee rate during continues trading phase
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingFees.MakerFeeRate">
            <summary>
            The maker fee rate during continues trading phase
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPrelistingPhase">
            <summary>
            Prelisting phase
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingPhase.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingPhase.StartTime">
            <summary>
            Phase start time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPrelistingPhase.EndTime">
            <summary>
            Phase end time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearInverseLeveragefilter">
            <summary>
            Leverage filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLeveragefilter.MinLeverage">
            <summary>
            Min leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLeveragefilter.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLeveragefilter.LeverageStep">
            <summary>
            Leverage step
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter">
            <summary>
            Lot size filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter.QuantityStep">
            <summary>
            Quantity step
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter.MaxMarketOrderQuantity">
            <summary>
            Max market order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseLotSizeFilter.MinNotionalValue">
            <summary>
            Minimal notional value of an order
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearInversePriceFilter">
            <summary>
            Price filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInversePriceFilter.TickSize">
            <summary>
            Tick size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInversePriceFilter.MinPrice">
            <summary>
            Min price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInversePriceFilter.MaxPrice">
            <summary>
            Max price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker">
            <summary>
            Linear/Inverse ticker
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PreviousPrice24h">
            <summary>
            Price 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PreviousPrice1h">
            <summary>
            Price 1h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PriceChangePercentage24h">
            <summary>
            Price change percentage since 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.HighPrice24h">
            <summary>
            High price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.LowPrice24h">
            <summary>
            Low price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.DeliveryFeeRate">
            <summary>
            Delivery fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.OpenInterestValue">
            <summary>
            Open interest value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.Turnover24h">
            <summary>
            Turnover last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.Volume24h">
            <summary>
            Volume last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PredictedDeliveryPrice">
            <summary>
            Predicted delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PreOpenPrice">
            <summary>
            Estimated pre-market contract open price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PreOpenQuantity">
            <summary>
            Estimated pre-market contract open qty
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearInverseTicker.PreListingPhase">
            <summary>
            The current pre-market contract phase
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.TickDirection">
            <summary>
            Tick direction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PricePercentage24h">
            <summary>
            Price change percentage since 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PreviousPrice24h">
            <summary>
            Previous price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PreviousPrice1h">
            <summary>
            Previous price in last hour
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.OpenInterestValue">
            <summary>
            Open interest value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.Turnover24h">
            <summary>
            24 hour turnover
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.Volume24h">
            <summary>
            24 hour volume
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.DeliveryTime">
            <summary>
            [InverseFutures] Delivery time in UTC
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.BasisRate">
            <summary>
            [InverseFutures] Basis rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.DeliveryFeeRate">
            <summary>
            [InverseFutures] Delivery fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PredictedDeliveryPrice">
            <summary>
            [InverseFutures] Predicted delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PreOpenPrice">
            <summary>
            Estimated pre-market contract open price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PreOpenQuantity">
            <summary>
            Estimated pre-market contract open qty
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLinearTickerUpdate.PreListingPhase">
            <summary>
            The current pre-market contract phase
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLiquidation">
            <summary>
            Liquidation info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidation.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidation.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidation.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidation.UpdateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate">
            <summary>
            Liquidation info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLiquidationUpdate.UpdateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLoan">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.CollateralQuantity">
            <summary>
            Collateral quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.CurrentLtv">
            <summary>
            Current LTV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.ExpirationTime">
            <summary>
            Expiration time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.HourlyInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.LoanTerm">
            <summary>
            Loan term
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.ResidualInterest">
            <summary>
            Residual interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.ResidualPenaltyInterest">
            <summary>
            Residual penalty interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoan.TotalDebt">
            <summary>
            Total debt
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLoanOrder">
            <summary>
            Loan order info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.BorrowTime">
            <summary>
            Borrow time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.ExpirationTime">
            <summary>
            Expiration time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.HourlyInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.InitialCollateralQuantity">
            <summary>
            Initial collateral quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.InitialLoanQuantity">
            <summary>
            Initial loan quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.LoanTerm">
            <summary>
            Loan term
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.RepaidInterest">
            <summary>
            Repaid interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.RepaidPenaltyInterest">
            <summary>
            Repaid penalty interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLoanOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitLongShortRatio">
            <summary>
            Long/short ratio
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLongShortRatio.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLongShortRatio.BuyRatio">
            <summary>
            The ratio of users with net long position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLongShortRatio.SellRatio">
            <summary>
            The ratio of users with net short position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitLongShortRatio.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitMaxCollateral">
            <summary>
            Max collateral info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMaxCollateral.MaxCollateralQuantity">
            <summary>
            Max collateral quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate">
            <summary>
            Minimal user trade update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.OrderId">
            <summary>
            Order id trade belongs to
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.ClientOrderId">
            <summary>
            Client order id trade belongs to
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.IsMaker">
            <summary>
            Is maker trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitMinimalUserTradeUpdate.Sequence">
            <summary>
            Cross sequence, used to associate each fill and each position update
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOpenInterest">
            <summary>
            Open interest at a time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOpenInterest.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOpenInterest.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOperationResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOperationResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionSymbol">
            <summary>
            Option symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.OptionType">
            <summary>
            Options type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.SettleAsset">
            <summary>
            Settle asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.LaunchTime">
            <summary>
            Launch time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.DeliveryFeeRate">
            <summary>
            Delivery fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.LotSizeFilter">
            <summary>
            Lot size order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionSymbol.PriceFilter">
            <summary>
            Price order filter
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionLotSizeFilter">
            <summary>
            Lot size filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionLotSizeFilter.QuantityStep">
            <summary>
            Quantity step
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionLotSizeFilter.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionLotSizeFilter.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionPriceFilter">
            <summary>
            Price filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionPriceFilter.TickSize">
            <summary>
            Tick size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionPriceFilter.MinPrice">
            <summary>
            Min price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionPriceFilter.MaxPrice">
            <summary>
            Max price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestBidIv">
            <summary>
            Best bid IV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.BestAskIv">
            <summary>
            Best ask IV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.HighPrice24h">
            <summary>
            High price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.LowPrice24h">
            <summary>
            Low price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.MarkIv">
            <summary>
            Mark iv
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.UnderlyingPrice">
            <summary>
            Underlying asset price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Turnover24h">
            <summary>
            Turnover last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Volume24h">
            <summary>
            Volume last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.TotalVolume">
            <summary>
            Total volume
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.TotalTurnover">
            <summary>
            Total turnover
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Delta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Gamma">
            <summary>
            Gamma
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Vega">
            <summary>
            Vega
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Theta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.PredictedDeliveryPrice">
            <summary>
            Predicted delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTicker.Change24h">
            <summary>
            Change since 24h ago
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate">
            <summary>
            Option ticker update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.BidIv">
            <summary>
            Bid IV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.AskIv">
            <summary>
            Ask IV
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.HighPrice24h">
            <summary>
            24h high price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.LowPrice24h">
            <summary>
            24h low price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.MarkPriceIv">
            <summary>
            Mark price iv
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.UnderlyingPrice">
            <summary>
            Underlying price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Turnover24h">
            <summary>
            Turnover 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Volume24h">
            <summary>
            Volume 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.TotalVolume">
            <summary>
            Total volume
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.TotalTurnover">
            <summary>
            Total turnover
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Delta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Gamma">
            <summary>
            Gamma
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Vega">
            <summary>
            Vega
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Theta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.PredictedDeliveryPrice">
            <summary>
            Predicted delivery price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTickerUpdate.Change24h">
            <summary>
            24h change
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOptionTrade">
            <summary>
            Options trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTrade.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTrade.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTrade.MarkIv">
            <summary>
            Mark iv
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOptionTrade.IndexIv">
            <summary>
            Index iv
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.BlockTradeId">
            <summary>
            Block trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.IsLeverage">
            <summary>
            Is leverage order
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.PositionIdx">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.CancelType">
            <summary>
            Cancel type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.RejectReason">
            <summary>
            Reject reason
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.AveragePrice">
            <summary>
            Average fill pricec
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.QuantityRemaining">
            <summary>
            Quantity open
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.ValueRemaining">
            <summary>
            Estimated value open
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.ValueFilled">
            <summary>
            Value filled
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.ExecutedFee">
            <summary>
            Fee paid for filled quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.FeeAsset">
            <summary>
            Trading fee asset. for Spot only.
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.StopOrderType">
            <summary>
            Stop order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.OrderIv">
            <summary>
            Order Iv
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TakeProfit">
            <summary>
            Take profit
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.StopLoss">
            <summary>
            Stop loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TakeProfitTriggerBy">
            <summary>
            Take profit trigger type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.StopLossTriggerBy">
            <summary>
            Stop loss trigger type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TriggerDirection">
            <summary>
            Trigger direction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TriggerBy">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.LastPriceOnCreated">
            <summary>
            Last price when the order was placed
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.CloseOnTrigger">
            <summary>
            Close on trigger
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.CreateType">
            <summary>
            Order create type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.MarketUnit">
            <summary>
            Market unit for quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.OcoTriggerType">
            <summary>
            Oco trigger type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TakeProfitLimitPrice">
            <summary>
            Take profit limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.StopLossLimitPrice">
            <summary>
            Stop loss limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.SelfMatchPreventionType">
            <summary>
            Self match prevention type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.SelfMatchPreventionGroup">
            <summary>
            Self match prevention group, 0 by default
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.SelfMatchPreventionOrderId">
            <summary>
            The counterparty's orderID which triggers this SMP execution
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.TpSlMode">
            <summary>
            Take profit/stop loss mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.PlaceType">
            <summary>
            Place type (option only)
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.SlippageToleranceType">
            <summary>
            Slippage tolerance types
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrder.SlippageTolerance">
            <summary>
            Slippage tolerance value
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOrderbook">
            <summary>
            Order book info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbook.Sequence">
            <summary>
            Cross sequence
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOrderbookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbookEntry.Price">
            <summary>
            Price of the entry
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderbookEntry.Quantity">
            <summary>
            Quantity of the entry
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOrderId">
            <summary>
            Order ids
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderId.OrderId">
            <summary>
            The order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitOrderUpdate">
            <summary>
            User order update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderUpdate.ClosedPnl">
            <summary>
            Closed profit and loss for a close position order.
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitOrderUpdate.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest">
            <summary>
            Request info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.OrderType">
            <summary>
            Type of order
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.Side">
            <summary>
            Side of the order
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.Price">
            <summary>
            Price if order type is not market
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TimeInForce">
            <summary>
            Time in force, if not passed GoodTillCanceled is used by default
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.ClientOrderId">
            <summary>
            Client order id. Required for Options
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.ReduceOnly">
            <summary>
            Set to true so your position can only reduce in size if this order is triggered.
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TakeProfitStopLossMode">
            <summary>
            Take profit / stop loss mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TakeProfit">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.StopLoss">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TriggerDirection">
            <summary>
            Trigger direction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TriggerBy">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.PositionIdx">
            <summary>
            Position idx
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TakeProfitLimitPrice">
            <summary>
            Take profit limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.StopLossLimitPrice">
            <summary>
            Stop loss limit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.StopLossOrderType">
            <summary>
            Stop loss order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TakeProfitOrderType">
            <summary>
            Take profit order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.MarketMakerProtection">
            <summary>
            Market maker protection. option only. true means set the order as a market maker protection order
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.OrderImpliedVolatility">
            <summary>
            Implied volatility. option only. Pass the real value, e.g for 10%, 0.1 should be passed. orderIv has a higher priority when price is passed as well
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.MarketUnit">
            <summary>
            The unit for qty when creating spot market orders for unified trading account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.CloseOnTrigger">
            <summary>
            Close on trigger, can only reduce the position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.StpType">
            <summary>
            Self match prevention type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.StopLossTriggerBy">
            <summary>
            Stop loss trigger by
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.TakeProfitTriggerBy">
            <summary>
            Take profit trigger by
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.OrderFilter">
            <summary>
            Order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPlaceOrderRequest.IsLeverage">
            <summary>
            Whether to borrow. Valid for Unified spot only. 1 for true
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.PositionIdx">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.RiskId">
            <summary>
            Risk id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.RiskLimitValue">
            <summary>
            Risk limit value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Side">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Quantity">
            <summary>
            Position size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.AveragePrice">
            <summary>
            Average entry price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.PositionValue">
            <summary>
            Position value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.TradeMode">
            <summary>
            Trade mode. Only valid for Classic and UTA (inverse)
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.PositionStatus">
            <summary>
            Position status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.BustPrice">
            <summary>
            Bankruptcy price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.TakeProfitStopLossMode">
            <summary>
            Take profit / stop loss price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.TakeProfit">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.StopLoss">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.TrailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.UnrealizedPnl">
            <summary>
            Unrealized profit and lsos
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.CurrentRealizedPnl">
            <summary>
            The realised PnL for the current holding position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.AutoDeleverageRankIndicator">
            <summary>
            Auto deleverage rank indicator
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.CreateTime">
            <summary>
            Created timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.UpdateTime">
            <summary>
            Updated timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.AutoAddMargin">
            <summary>
            Whether to add margin automatically
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.PositionBalance">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.IsReduceOnly">
            <summary>
            Is reduce only position
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.MaintenanceMarginUpdateTime">
            <summary>
            When IsReduceOnly = true: the timestamp when the MMR will be forcibly adjusted by the system. When IsReduceOnly = false: the timestamp when the MMR had been adjusted by system
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.LeverageUpdateTime">
            <summary>
            When IsReduceOnly = true: the timestamp when the leverage will be forcibly adjusted by the system. When IsReduceOnly = false: the timestamp when the leverage had been adjusted by system
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Sequence">
            <summary>
            Cross sequence, used to associate each fill and each position update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.SessionAveragePrice">
            <summary>
            USDC contract session average price, it is the same figure as avg entry price shown in the web UI
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Delta">
            <summary>
            Delta, unique field for option
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Gamma">
            <summary>
            Gamma, unique field for option
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Vega">
            <summary>
            Vega, unique field for option
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPosition.Theta">
            <summary>
            Theta, unique field for option
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPositionUpdate">
            <summary>
            Category
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitRepayment">
            <summary>
            Repayment info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.CollateralReturn">
            <summary>
            Collateral return
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.LoanTerm">
            <summary>
            Loan term
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.RepayQuantity">
            <summary>
            Repay quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.RepayId">
            <summary>
            Repay id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.RepayStatus">
            <summary>
            Repay status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.RepayTime">
            <summary>
            Repay time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRepayment.RepayType">
            <summary>
            Repay type
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitBaseResponse">
            <summary>
            Bybit response
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBaseResponse.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBaseResponse.Total">
            <summary>
            Total items
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBaseResponse.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBaseResponse.NextPageCursor">
            <summary>
            Cursor for pagination
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitBaseResponse.UpdateTime">
            <summary>
            Data updated time
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitResponse`1">
            <summary>
            Bybit response info
            </summary>
            <typeparam name="T">Type of the response data</typeparam>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitResponse`1.List">
            <summary>
            Data list
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitRiskLimit">
            <summary>
            Risk limit info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.Id">
            <summary>
            Risk limit id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.RiskLimitValue">
            <summary>
            Risk limit value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.IsLowestRisk">
            <summary>
            Is lowest risk
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitRiskLimit.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSetCollateralAssetRequest">
            <summary>
            Request info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetCollateralAssetRequest.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetCollateralAssetRequest.UseForCollateral">
            <summary>
            Use this asset for collateral
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSetMarginModeResult">
            <summary>
            Set Margin Mode result
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetMarginModeResult.Reasons">
            <summary>
            Failure reasons. If empty it was successful
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitReason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitReason.ReasonCode">
            <summary>
            Reason code
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitReason.ReasonMessage">
            <summary>
            Reason message
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSetRiskLimit">
            <summary>
            Set risk limit info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetRiskLimit.RiskId">
            <summary>
            The risk id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetRiskLimit.RiskLimitValue">
            <summary>
            Risk limit value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSetRiskLimit.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSettlementRecord">
            <summary>
            Settlement record
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSettlementRecord.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginBorrowRate">
            <summary>
            Margin item
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginBorrowRate.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginBorrowRate.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginBorrowRate.HourlyBorrowRate">
            <summary>
            Collateral ratio
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginBorrowRate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatio">
            <summary>
            Asset collateral ratio
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatio.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatio.CollateralRatios">
            <summary>
            Collateral ratios
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatioTier">
            <summary>
            Collateral ratio info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatioTier.MinQuantity">
            <summary>
            Lower limit of the tiered range
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatioTier.MaxQuantity">
            <summary>
            Upper limit of the tiered range, null means positive infinity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginCollateralRatioTier.CollateralRatio">
            <summary>
            Collateral ratio
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginLeverageStatus">
            <summary>
            Marging status and leverage info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginLeverageStatus.Leverage">
            <summary>
            The leverage
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginLeverageStatus.SpotMarginMode">
            <summary>
            Is spot margin mode activated
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginLeverageStatus.EffectiveLeverage">
            <summary>
            Actual leverage ratio
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginStatus">
            <summary>
            Marging status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginStatus.SpotMarginMode">
            <summary>
            Is spot margin mode activated
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginData">
            <summary>
            Margin data
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginList">
            <summary>
            Margin data
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginList.VipLevel">
            <summary>
            VIP level
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginList.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem">
            <summary>
            Margin item
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.Borrowable">
            <summary>
            Whether the asset is allowed to be borrowed
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.Collateralratio">
            <summary>
            Collateral ratio
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.HourlyBorrowRate">
            <summary>
            Borrow interest rate per hour
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.LiquidationOrder">
            <summary>
            Liquidation order
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.MarginCollateral">
            <summary>
            Whether it can be used as a margin collateral asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotMarginVipMarginItem.MaxBorrowingQuantity">
            <summary>
            Max borrow amount
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotSymbol">
            <summary>
            Spot symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.MarginTrading">
            <summary>
            Margin trade status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.Innovation">
            <summary>
            Is innovation
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.LotSizeFilter">
            <summary>
            Lot size order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.PriceFilter">
            <summary>
            Price order filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.PricePercentageFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotSymbol.SpecialTreatmentLabel">
            <summary>
            Whether the symbol has the special treatment label
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitPriceLimit">
            <summary>
            Price limits
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPriceLimit.PriceLimitRatioX">
            <summary>
            Ratio X
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitPriceLimit.PriceLimitRatioY">
            <summary>
            Ratio Y
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter">
            <summary>
            Lot size filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.BasePrecision">
            <summary>
            Base precision
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.QuotePrecision">
            <summary>
            Quote precision
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.MinOrderValue">
            <summary>
            Min order amount
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotLotSizeFilter.MaxOrderValue">
            <summary>
            Max order amount
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotPriceFilter">
            <summary>
            Price filter info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotPriceFilter.TickSize">
            <summary>
            Tick size
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.PreviousPrice24h">
            <summary>
            Price 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.PriceChangePercentag24h">
            <summary>
            Price change percentage since 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.HighPrice24h">
            <summary>
            High price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.LowPrice24h">
            <summary>
            Low price last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.Turnover24h">
            <summary>
            Turnover last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.Volume24h">
            <summary>
            Volume last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTicker.UsdIndexPrice">
            <summary>
            Usd index price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate">
            <summary>
            Spot ticker update
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.PreviousPrice24h">
            <summary>
            Previous price in last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.Volume24h">
            <summary>
            Volume last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.Turnover24h">
            <summary>
            Turnover last 24h
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.PricePercentage24h">
            <summary>
            Price change percentage since 24h ago
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSpotTickerUpdate.UsdIndexPrice">
            <summary>
            Usd index price
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitSubAccount">
            <summary>
            Sub account info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.Status">
            <summary>
            Account status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.AccountMode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitSubAccount.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTakeProfitStopLossMode">
            <summary>
            Tp/Sl mode
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTakeProfitStopLossMode.TakeProfitStopLossMode">
            <summary>
            Tpsl mode
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTime">
            <summary>
            Server time info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTime.TimeSecond">
            <summary>
            Seconds timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTime.TimeNano">
            <summary>
            Nano seconds timestamp
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Timestamp">
            <summary>
            Trade timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.IsBlockTrade">
            <summary>
            Is block trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTrade.IsRpiTrade">
            <summary>
            Is Retail Price Improvement trade
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTradeHistory">
            <summary>
            Trade history info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.Price">
            <summary>
            Price of the trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.Quantity">
            <summary>
            Quantity of the trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.Timestamp">
            <summary>
            Trade timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.IsBlockTrade">
            <summary>
            Is block trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.IsRpiTrade">
            <summary>
            Is Retail Price Improvement trade
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.MarkPrice">
            <summary>
            [Option only] Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.IndexPrice">
            <summary>
            [Option only] Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.MarkIv">
            <summary>
            [Option only] Mark iv
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTradeHistory.IndexIv">
            <summary>
            [Option only] Index iv
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTransactionLog">
            <summary>
            Transaction info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Category">
            <summary>
            Product
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.TradePrice">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Funding">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Fee">
            <summary>
            Trading fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Cashflow">
            <summary>
            Cash flow
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.CashBalance">
            <summary>
            Cash balance
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.FeeRate">
            <summary>
            Fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.BonusChange">
            <summary>
            Bonus change
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransactionLog.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.FromAccountType">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.ToAccountType">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.FromMemberId">
            <summary>
            [UniversalTransfer] From member id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransfer.ToMemberId">
            <summary>
            [UniversalTransfer] To member id
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTransferable">
            <summary>
            Transferable
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransferable.Available">
            <summary>
            Available transferable quantity, if multiple assets requested this is for the first asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransferable.AssetsAvailable">
            <summary>
            Map of all requested assets and available values
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitTransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransferId.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitTransferId.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitUserAssetInfos">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserAssetInfos.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitUserAssetInfo">
            <summary>
            Asset info for user
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserAssetInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserAssetInfo.Asset">
            <summary>
            asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserAssetInfo.QuantityRemaining">
            <summary>
            Quantity remaining
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserAssetInfo.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo">
            <summary>
            Asset network info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.NetworkType">
            <summary>
            Network type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.Confirmation">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.WithdrawFee">
            <summary>
            Withdrawal fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.MinDeposit">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.MinWithdraw">
            <summary>
            Min withdrawal quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.Network">
            <summary>
            Chain
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.NetworkDeposit">
            <summary>
            Chain deposit enabled
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.NetworkWithdraw">
            <summary>
            Chain withdraw enabled
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.MinAccuracy">
            <summary>
            Minimal accuracy
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.WithdrawPercentageFee">
            <summary>
            Withdrawal percentage fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitAssetNetworkInfo.ContractAddress">
            <summary>
            Contract address
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.OrderId">
            <summary>
            Order id trade belongs to
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.ClientOrderId">
            <summary>
            Client order id trade belongs to
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.QuantityRemaining">
            <summary>
            Remaining order quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.StopOrderType">
            <summary>
            Stop order type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Value">
            <summary>
            Trade value
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.TradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.IsMaker">
            <summary>
            Is maker
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.IsLeverage">
            <summary>
            Whether to borrow. Unified spot only
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.FeeAsset">
            <summary>
            Spot trading fee asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.FeeRate">
            <summary>
            Fee rate
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.TradeIv">
            <summary>
            [Options] Implied volatility
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.MarkIv">
            <summary>
            [Options] Implied volatility of mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.IndexPrice">
            <summary>
            [Options] Index price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.UnderlyingPrice">
            <summary>
            [Options] Underlying price
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.BlockTradeId">
            <summary>
            Block trade id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.ClosedQuantity">
            <summary>
            Closed position size
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTrade.Sequence">
            <summary>
            Cross sequence, used to associate each fill and each position update
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitUserTradeUpdate">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTradeUpdate.Pnl">
            <summary>
            Profit and Loss for a position execution
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitUserTradeUpdate.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Models.V5.BybitWithdrawal">
            <summary>
            Withdrawal info
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.WithdrawFee">
            <summary>
            Withdrawal fee
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Models.V5.BybitWithdrawal.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Options.BybitOptions">
            <summary>
            Bybit options
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Options.BybitOrderBookOptions">
            <summary>
            Options for the Bybit SymbolOrderBook
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitOrderBookOptions.Default">
            <summary>
            Default options for the Bybit SymbolOrderBook
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book, valid values depend on the category
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Options.BybitRestOptions">
            <summary>
            Options for the BybitRestClient
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitRestOptions.Default">
            <summary>
            Default options for the rest client
            </summary>
        </member>
        <member name="M:Bybit.Net.Objects.Options.BybitRestOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitRestOptions.Referer">
            <summary>
            A referer, will be sent in the Referer header
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitRestOptions.ReceiveWindow">
            <summary>
            The default receive window for requests
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitRestOptions.V5Options">
            <summary>
            Options for the V5 API
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Options.BybitSocketApiOptions">
            <summary>
            Bybit socket API options
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitSocketApiOptions.PingInterval">
            <summary>
            Interval at which to send a ping to the server
            </summary>
        </member>
        <member name="T:Bybit.Net.Objects.Options.BybitSocketOptions">
            <summary>
            Options for the BybitSocketClient
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitSocketOptions.Default">
            <summary>
            Default options for the socket client
            </summary>
        </member>
        <member name="M:Bybit.Net.Objects.Options.BybitSocketOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitSocketOptions.Referer">
            <summary>
            A referer, will be sent in the Referer header
            </summary>
        </member>
        <member name="P:Bybit.Net.Objects.Options.BybitSocketOptions.V5Options">
            <summary>
            Options for the V5 API
            </summary>
        </member>
        <member name="T:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.Options">
            <inheritdoc />
        </member>
        <member name="P:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.LinearInverse">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.CreateSpot(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.CreateOption(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.CreateLinearInverse(System.String,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitOrderBookFactory.Create(System.String,Bybit.Net.Enums.Category,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.#ctor(System.String,Bybit.Net.Enums.Category,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="category">The category</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.#ctor(System.String,Bybit.Net.Enums.Category,System.Action{Bybit.Net.Objects.Options.BybitOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,Bybit.Net.Interfaces.Clients.IBybitSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="category">The category</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bybit.Net.SymbolOrderBooks.BybitSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bybit(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Bybit REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bybit(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Bybit Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBybit(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services such as the IBybitRestClient and IBybitSocketClient. Configures the services based on the provided configuration.
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">The configuration(section) containing the options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBybit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bybit.Net.Objects.Options.BybitOptions})">
            <summary>
            Add services such as the IBybitRestClient and IBybitSocketClient. Services will be configured based on the provided options.
            </summary>
            <param name="services">The service collection</param>
            <param name="optionsDelegate">Set options for the Bybit services</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBybit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bybit.Net.Objects.Options.BybitRestOptions},System.Action{Bybit.Net.Objects.Options.BybitSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            DEPRECATED; use <see cref="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBybit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bybit.Net.Objects.Options.BybitOptions})" /> instead
            </summary>
        </member>
    </members>
</doc>
